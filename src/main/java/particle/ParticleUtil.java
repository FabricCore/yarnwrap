package yarnwrap.particle;
public class ParticleUtil { public net.minecraft.particle.ParticleUtil wrapperContained; public ParticleUtil(net.minecraft.particle.ParticleUtil wrapperContained) { this.wrapperContained = wrapperContained; }

public void spawnParticle(yarnwrap.world.World world,yarnwrap.util.math.BlockPos pos,yarnwrap.util.math.Direction direction,yarnwrap.particle.ParticleEffect effect,yarnwrap.util.math.Vec3d velocity,double offsetMultiplier) { wrapperContained.spawnParticle(world.wrapperContained,pos.wrapperContained,direction.wrapperContained,effect.wrapperContained,velocity.wrapperContained,offsetMultiplier); }
public void spawnParticle(yarnwrap.world.World world,yarnwrap.util.math.BlockPos pos,yarnwrap.particle.ParticleEffect effect,yarnwrap.util.math.intprovider.IntProvider count) { wrapperContained.spawnParticle(world.wrapperContained,pos.wrapperContained,effect.wrapperContained,count.wrapperContained); }
// public void spawnParticle(Object axis,yarnwrap.world.World world,yarnwrap.util.math.BlockPos pos,double variance,yarnwrap.particle.ParticleEffect effect,yarnwrap.util.math.intprovider.UniformIntProvider range) { wrapperContained.spawnParticle(axis,world.wrapperContained,pos.wrapperContained,variance,effect.wrapperContained,range.wrapperContained); }
public void spawnParticles(yarnwrap.world.World world,yarnwrap.util.math.BlockPos pos,yarnwrap.particle.ParticleEffect effect,yarnwrap.util.math.intprovider.IntProvider count,yarnwrap.util.math.Direction direction,java.util.function.Supplier velocity,double offsetMultiplier) { wrapperContained.spawnParticles(world.wrapperContained,pos.wrapperContained,effect.wrapperContained,count.wrapperContained,direction.wrapperContained,velocity,offsetMultiplier); }
// public yarnwrap.util.math.Vec3d getRandomVelocity(yarnwrap.util.math.random.Random random) { return new yarnwrap.util.math.Vec3d(wrapperContained.getRandomVelocity(random.wrapperContained)); }
public void spawnParticle(yarnwrap.world.World world,yarnwrap.util.math.BlockPos pos,yarnwrap.util.math.random.Random random,yarnwrap.particle.ParticleEffect effect) { wrapperContained.spawnParticle(world.wrapperContained,pos.wrapperContained,random.wrapperContained,effect.wrapperContained); }
public void spawnParticlesAround(yarnwrap.world.WorldAccess world,yarnwrap.util.math.BlockPos pos,int count,double horizontalOffset,double verticalOffset,boolean force,yarnwrap.particle.ParticleEffect effect) { wrapperContained.spawnParticlesAround(world.wrapperContained,pos.wrapperContained,count,horizontalOffset,verticalOffset,force,effect.wrapperContained); }
public void spawnParticlesAround(yarnwrap.world.WorldAccess world,yarnwrap.util.math.BlockPos pos,int count,yarnwrap.particle.ParticleEffect effect) { wrapperContained.spawnParticlesAround(world.wrapperContained,pos.wrapperContained,count,effect.wrapperContained); }
public void spawnSmashAttackParticles(yarnwrap.world.WorldAccess world,yarnwrap.util.math.BlockPos pos,int count) { wrapperContained.spawnSmashAttackParticles(world.wrapperContained,pos.wrapperContained,count); }

}
package yarnwrap.client.render.block;
public class BlockModelRenderer { public net.minecraft.client.render.block.BlockModelRenderer wrapperContained; public BlockModelRenderer(net.minecraft.client.render.block.BlockModelRenderer wrapperContained) { this.wrapperContained = wrapperContained; }

// public yarnwrap.client.color.block.BlockColors colors() { return new yarnwrap.client.color.block.BlockColors(wrapperContained.colors); }
// public void colors(yarnwrap.client.color.block.BlockColors value) { wrapperContained.colors = value.wrapperContained; }
// public static yarnwrap.client.color.block.BlockColors colors() { return new yarnwrap.client.color.block.BlockColors(net.minecraft.client.render.block.BlockModelRenderer.colors); }
// public static void colors(yarnwrap.client.color.block.BlockColors value, ) { net.minecraft.client.render.block.BlockModelRenderer.colors = value.wrapperContained; }

// public java.lang.ThreadLocal BRIGHTNESS_CACHE() { return wrapperContained.BRIGHTNESS_CACHE; }
// public void BRIGHTNESS_CACHE(java.lang.ThreadLocal value) { wrapperContained.BRIGHTNESS_CACHE = value; }
// public static java.lang.ThreadLocal BRIGHTNESS_CACHE() { return net.minecraft.client.render.block.BlockModelRenderer.BRIGHTNESS_CACHE; }
// public static void BRIGHTNESS_CACHE(java.lang.ThreadLocal value, ) { net.minecraft.client.render.block.BlockModelRenderer.BRIGHTNESS_CACHE = value; }

// public net.minecraft.util.math.Direction[] DIRECTIONS() { return wrapperContained.DIRECTIONS; }
// public void DIRECTIONS(net.minecraft.util.math.Direction[] value) { wrapperContained.DIRECTIONS = value; }
// public static net.minecraft.util.math.Direction[] DIRECTIONS() { return net.minecraft.client.render.block.BlockModelRenderer.DIRECTIONS; }
// public static void DIRECTIONS(net.minecraft.util.math.Direction[] value, ) { net.minecraft.client.render.block.BlockModelRenderer.DIRECTIONS = value; }

// public int BRIGHTNESS_CACHE_MAX_SIZE() { return wrapperContained.BRIGHTNESS_CACHE_MAX_SIZE; }
// public void BRIGHTNESS_CACHE_MAX_SIZE(int value) { wrapperContained.BRIGHTNESS_CACHE_MAX_SIZE = value; }
// public static int BRIGHTNESS_CACHE_MAX_SIZE() { return net.minecraft.client.render.block.BlockModelRenderer.BRIGHTNESS_CACHE_MAX_SIZE; }
// public static void BRIGHTNESS_CACHE_MAX_SIZE(int value, ) { net.minecraft.client.render.block.BlockModelRenderer.BRIGHTNESS_CACHE_MAX_SIZE = value; }

public BlockModelRenderer(yarnwrap.client.color.block.BlockColors colors) { this.wrapperContained = new net.minecraft.client.render.block.BlockModelRenderer(colors.wrapperContained); }
public void renderSmooth(yarnwrap.world.BlockRenderView world,java.util.List parts,yarnwrap.block.BlockState state,yarnwrap.util.math.BlockPos pos,yarnwrap.client.util.math.MatrixStack matrices,yarnwrap.client.render.VertexConsumer vertexConsumer,boolean cull,int overlay) { wrapperContained.renderSmooth(world.wrapperContained,parts,state.wrapperContained,pos.wrapperContained,matrices.wrapperContained,vertexConsumer.wrapperContained,cull,overlay); }
// public static void renderSmooth(yarnwrap.world.BlockRenderView world,java.util.List parts,yarnwrap.block.BlockState state,yarnwrap.util.math.BlockPos pos,yarnwrap.client.util.math.MatrixStack matrices,yarnwrap.client.render.VertexConsumer vertexConsumer,boolean cull,int overlay, ) { net.minecraft.client.render.block.BlockModelRenderer.renderSmooth(world.wrapperContained,parts,state.wrapperContained,pos.wrapperContained,matrices.wrapperContained,vertexConsumer.wrapperContained,cull,overlay); }
// public void renderQuadsSmooth(yarnwrap.world.BlockRenderView world,yarnwrap.block.BlockState state,yarnwrap.util.math.BlockPos pos,yarnwrap.client.util.math.MatrixStack matrices,yarnwrap.client.render.VertexConsumer vertexConsumer,java.util.List quads,Object ambientOcclusionCalculator,int overlay) { wrapperContained.renderQuadsSmooth(world.wrapperContained,state.wrapperContained,pos.wrapperContained,matrices.wrapperContained,vertexConsumer.wrapperContained,quads,ambientOcclusionCalculator,overlay); }
// public static void renderQuadsSmooth(yarnwrap.world.BlockRenderView world,yarnwrap.block.BlockState state,yarnwrap.util.math.BlockPos pos,yarnwrap.client.util.math.MatrixStack matrices,yarnwrap.client.render.VertexConsumer vertexConsumer,java.util.List quads,Object ambientOcclusionCalculator,int overlay, ) { net.minecraft.client.render.block.BlockModelRenderer.renderQuadsSmooth(world.wrapperContained,state.wrapperContained,pos.wrapperContained,matrices.wrapperContained,vertexConsumer.wrapperContained,quads,ambientOcclusionCalculator,overlay); }
// public void getQuadDimensions(yarnwrap.world.BlockRenderView world,yarnwrap.block.BlockState state,yarnwrap.util.math.BlockPos pos,int vertexData,net.minecraft.util.math.Direction[] face,Object lightmap) { wrapperContained.getQuadDimensions(world.wrapperContained,state.wrapperContained,pos.wrapperContained,vertexData,face,lightmap); }
// public static void getQuadDimensions(yarnwrap.world.BlockRenderView world,yarnwrap.block.BlockState state,yarnwrap.util.math.BlockPos pos,int vertexData,net.minecraft.util.math.Direction[] face,Object lightmap, ) { net.minecraft.client.render.block.BlockModelRenderer.getQuadDimensions(world.wrapperContained,state.wrapperContained,pos.wrapperContained,vertexData,face,lightmap); }
// public void renderQuads(Object entry,yarnwrap.client.render.VertexConsumer vertexConsumer,float red,float green,float blue,java.util.List quads,int light,int overlay) { wrapperContained.renderQuads(entry,vertexConsumer.wrapperContained,red,green,blue,quads,light,overlay); }
// public static void renderQuads(Object entry,yarnwrap.client.render.VertexConsumer vertexConsumer,float red,float green,float blue,java.util.List quads,int light,int overlay, ) { net.minecraft.client.render.block.BlockModelRenderer.renderQuads(entry,vertexConsumer.wrapperContained,red,green,blue,quads,light,overlay); }
// public void render(Object entry,yarnwrap.client.render.VertexConsumer vertexConsumer,yarnwrap.client.render.model.BlockStateModel model,float red,float green,float blue,int light,int overlay) { wrapperContained.render(entry,vertexConsumer.wrapperContained,model.wrapperContained,red,green,blue,light,overlay); }
// public static void render(Object entry,yarnwrap.client.render.VertexConsumer vertexConsumer,yarnwrap.client.render.model.BlockStateModel model,float red,float green,float blue,int light,int overlay, ) { net.minecraft.client.render.block.BlockModelRenderer.render(entry,vertexConsumer.wrapperContained,model.wrapperContained,red,green,blue,light,overlay); }
// public void renderQuadsFlat(yarnwrap.world.BlockRenderView world,yarnwrap.block.BlockState state,yarnwrap.util.math.BlockPos pos,int light,int overlay,boolean useWorldLight,yarnwrap.client.util.math.MatrixStack matrices,yarnwrap.client.render.VertexConsumer vertexConsumer,java.util.List quads,Object lightmap) { wrapperContained.renderQuadsFlat(world.wrapperContained,state.wrapperContained,pos.wrapperContained,light,overlay,useWorldLight,matrices.wrapperContained,vertexConsumer.wrapperContained,quads,lightmap); }
// public static void renderQuadsFlat(yarnwrap.world.BlockRenderView world,yarnwrap.block.BlockState state,yarnwrap.util.math.BlockPos pos,int light,int overlay,boolean useWorldLight,yarnwrap.client.util.math.MatrixStack matrices,yarnwrap.client.render.VertexConsumer vertexConsumer,java.util.List quads,Object lightmap, ) { net.minecraft.client.render.block.BlockModelRenderer.renderQuadsFlat(world.wrapperContained,state.wrapperContained,pos.wrapperContained,light,overlay,useWorldLight,matrices.wrapperContained,vertexConsumer.wrapperContained,quads,lightmap); }
public void renderFlat(yarnwrap.world.BlockRenderView world,java.util.List parts,yarnwrap.block.BlockState state,yarnwrap.util.math.BlockPos pos,yarnwrap.client.util.math.MatrixStack matrices,yarnwrap.client.render.VertexConsumer vertexConsumer,boolean cull,int overlay) { wrapperContained.renderFlat(world.wrapperContained,parts,state.wrapperContained,pos.wrapperContained,matrices.wrapperContained,vertexConsumer.wrapperContained,cull,overlay); }
// public static void renderFlat(yarnwrap.world.BlockRenderView world,java.util.List parts,yarnwrap.block.BlockState state,yarnwrap.util.math.BlockPos pos,yarnwrap.client.util.math.MatrixStack matrices,yarnwrap.client.render.VertexConsumer vertexConsumer,boolean cull,int overlay, ) { net.minecraft.client.render.block.BlockModelRenderer.renderFlat(world.wrapperContained,parts,state.wrapperContained,pos.wrapperContained,matrices.wrapperContained,vertexConsumer.wrapperContained,cull,overlay); }
public void render(yarnwrap.world.BlockRenderView world,java.util.List parts,yarnwrap.block.BlockState state,yarnwrap.util.math.BlockPos pos,yarnwrap.client.util.math.MatrixStack matrices,yarnwrap.client.render.VertexConsumer vertexConsumer,boolean cull,int overlay) { wrapperContained.render(world.wrapperContained,parts,state.wrapperContained,pos.wrapperContained,matrices.wrapperContained,vertexConsumer.wrapperContained,cull,overlay); }
// public static void render(yarnwrap.world.BlockRenderView world,java.util.List parts,yarnwrap.block.BlockState state,yarnwrap.util.math.BlockPos pos,yarnwrap.client.util.math.MatrixStack matrices,yarnwrap.client.render.VertexConsumer vertexConsumer,boolean cull,int overlay, ) { net.minecraft.client.render.block.BlockModelRenderer.render(world.wrapperContained,parts,state.wrapperContained,pos.wrapperContained,matrices.wrapperContained,vertexConsumer.wrapperContained,cull,overlay); }
// public void enableBrightnessCache() { wrapperContained.enableBrightnessCache(); }
public static void enableBrightnessCache() { net.minecraft.client.render.block.BlockModelRenderer.enableBrightnessCache(); }
// public void disableBrightnessCache() { wrapperContained.disableBrightnessCache(); }
public static void disableBrightnessCache() { net.minecraft.client.render.block.BlockModelRenderer.disableBrightnessCache(); }
// public void renderQuad(yarnwrap.world.BlockRenderView world,yarnwrap.block.BlockState state,yarnwrap.util.math.BlockPos pos,yarnwrap.client.render.VertexConsumer vertexConsumer,Object matrixEntry,yarnwrap.client.render.model.BakedQuad quad,Object lightmap) { wrapperContained.renderQuad(world.wrapperContained,state.wrapperContained,pos.wrapperContained,vertexConsumer.wrapperContained,matrixEntry,quad.wrapperContained,lightmap); }
// public static void renderQuad(yarnwrap.world.BlockRenderView world,yarnwrap.block.BlockState state,yarnwrap.util.math.BlockPos pos,yarnwrap.client.render.VertexConsumer vertexConsumer,Object matrixEntry,yarnwrap.client.render.model.BakedQuad quad,Object lightmap, ) { net.minecraft.client.render.block.BlockModelRenderer.renderQuad(world.wrapperContained,state.wrapperContained,pos.wrapperContained,vertexConsumer.wrapperContained,matrixEntry,quad.wrapperContained,lightmap); }
// public boolean shouldDrawFace(yarnwrap.world.BlockRenderView world,yarnwrap.block.BlockState state,boolean cull,yarnwrap.util.math.Direction side,yarnwrap.util.math.BlockPos pos) { return wrapperContained.shouldDrawFace(world.wrapperContained,state.wrapperContained,cull,side.wrapperContained,pos.wrapperContained); }
// public static boolean shouldDrawFace(yarnwrap.world.BlockRenderView world,yarnwrap.block.BlockState state,boolean cull,yarnwrap.util.math.Direction side,yarnwrap.util.math.BlockPos pos, ) { return net.minecraft.client.render.block.BlockModelRenderer.shouldDrawFace(world.wrapperContained,state.wrapperContained,cull,side.wrapperContained,pos.wrapperContained); }

}
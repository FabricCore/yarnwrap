package yarnwrap.client.render.entity;
public class PlayerEntityRenderer { public net.minecraft.client.render.entity.PlayerEntityRenderer wrapperContained; public PlayerEntityRenderer(net.minecraft.client.render.entity.PlayerEntityRenderer wrapperContained) { this.wrapperContained = wrapperContained; }

// public PlayerEntityRenderer(Object ctx,boolean slim) { this.wrapperContained = new net.minecraft.client.render.entity.PlayerEntityRenderer(ctx,slim); }
// public Object getArmPose(yarnwrap.entity.player.PlayerEntity player,yarnwrap.item.ItemStack stack,yarnwrap.util.Hand hand) { return wrapperContained.getArmPose(player.wrapperContained,stack.wrapperContained,hand.wrapperContained); }
// public static Object getArmPose(yarnwrap.entity.player.PlayerEntity player,yarnwrap.item.ItemStack stack,yarnwrap.util.Hand hand, ) { return net.minecraft.client.render.entity.PlayerEntityRenderer.getArmPose(player.wrapperContained,stack.wrapperContained,hand.wrapperContained); }
public void renderRightArm(yarnwrap.client.util.math.MatrixStack matrices,yarnwrap.client.render.VertexConsumerProvider vertexConsumers,int light,yarnwrap.util.Identifier skinTexture,boolean sleeveVisible) { wrapperContained.renderRightArm(matrices.wrapperContained,vertexConsumers.wrapperContained,light,skinTexture.wrapperContained,sleeveVisible); }
// public static void renderRightArm(yarnwrap.client.util.math.MatrixStack matrices,yarnwrap.client.render.VertexConsumerProvider vertexConsumers,int light,yarnwrap.util.Identifier skinTexture,boolean sleeveVisible, ) { net.minecraft.client.render.entity.PlayerEntityRenderer.renderRightArm(matrices.wrapperContained,vertexConsumers.wrapperContained,light,skinTexture.wrapperContained,sleeveVisible); }
public void renderLeftArm(yarnwrap.client.util.math.MatrixStack matrices,yarnwrap.client.render.VertexConsumerProvider vertexConsumers,int light,yarnwrap.util.Identifier skinTexture,boolean sleeveVisible) { wrapperContained.renderLeftArm(matrices.wrapperContained,vertexConsumers.wrapperContained,light,skinTexture.wrapperContained,sleeveVisible); }
// public static void renderLeftArm(yarnwrap.client.util.math.MatrixStack matrices,yarnwrap.client.render.VertexConsumerProvider vertexConsumers,int light,yarnwrap.util.Identifier skinTexture,boolean sleeveVisible, ) { net.minecraft.client.render.entity.PlayerEntityRenderer.renderLeftArm(matrices.wrapperContained,vertexConsumers.wrapperContained,light,skinTexture.wrapperContained,sleeveVisible); }
// public void renderArm(yarnwrap.client.util.math.MatrixStack matrices,yarnwrap.client.render.VertexConsumerProvider vertexConsumers,int light,yarnwrap.util.Identifier skinTexture,yarnwrap.client.model.ModelPart arm,boolean sleeveVisible) { wrapperContained.renderArm(matrices.wrapperContained,vertexConsumers.wrapperContained,light,skinTexture.wrapperContained,arm.wrapperContained,sleeveVisible); }
// public static void renderArm(yarnwrap.client.util.math.MatrixStack matrices,yarnwrap.client.render.VertexConsumerProvider vertexConsumers,int light,yarnwrap.util.Identifier skinTexture,yarnwrap.client.model.ModelPart arm,boolean sleeveVisible, ) { net.minecraft.client.render.entity.PlayerEntityRenderer.renderArm(matrices.wrapperContained,vertexConsumers.wrapperContained,light,skinTexture.wrapperContained,arm.wrapperContained,sleeveVisible); }
// public Object getShoulderParrotVariant(yarnwrap.client.network.AbstractClientPlayerEntity player,boolean left) { return wrapperContained.getShoulderParrotVariant(player.wrapperContained,left); }
// public static Object getShoulderParrotVariant(yarnwrap.client.network.AbstractClientPlayerEntity player,boolean left, ) { return net.minecraft.client.render.entity.PlayerEntityRenderer.getShoulderParrotVariant(player.wrapperContained,left); }
// public void updateGliding(yarnwrap.client.network.AbstractClientPlayerEntity player,yarnwrap.client.render.entity.state.PlayerEntityRenderState state,float tickProgress) { wrapperContained.updateGliding(player.wrapperContained,state.wrapperContained,tickProgress); }
// public static void updateGliding(yarnwrap.client.network.AbstractClientPlayerEntity player,yarnwrap.client.render.entity.state.PlayerEntityRenderState state,float tickProgress, ) { net.minecraft.client.render.entity.PlayerEntityRenderer.updateGliding(player.wrapperContained,state.wrapperContained,tickProgress); }
// public void updateCape(yarnwrap.client.network.AbstractClientPlayerEntity player,yarnwrap.client.render.entity.state.PlayerEntityRenderState state,float tickProgress) { wrapperContained.updateCape(player.wrapperContained,state.wrapperContained,tickProgress); }
// public static void updateCape(yarnwrap.client.network.AbstractClientPlayerEntity player,yarnwrap.client.render.entity.state.PlayerEntityRenderState state,float tickProgress, ) { net.minecraft.client.render.entity.PlayerEntityRenderer.updateCape(player.wrapperContained,state.wrapperContained,tickProgress); }
// public Object getArmPose(yarnwrap.client.network.AbstractClientPlayerEntity player,yarnwrap.util.Arm arm) { return wrapperContained.getArmPose(player.wrapperContained,arm.wrapperContained); }
// public static Object getArmPose(yarnwrap.client.network.AbstractClientPlayerEntity player,yarnwrap.util.Arm arm, ) { return net.minecraft.client.render.entity.PlayerEntityRenderer.getArmPose(player.wrapperContained,arm.wrapperContained); }

}
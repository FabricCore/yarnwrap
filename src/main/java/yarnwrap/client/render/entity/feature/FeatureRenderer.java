package yarnwrap.client.render.entity.feature;
public class FeatureRenderer { public net.minecraft.client.render.entity.feature.FeatureRenderer wrapperContained; public FeatureRenderer(net.minecraft.client.render.entity.feature.FeatureRenderer wrapperContained) { this.wrapperContained = wrapperContained; }

// public yarnwrap.client.render.entity.feature.FeatureRendererContext context() { return new yarnwrap.client.render.entity.feature.FeatureRendererContext(wrapperContained.context); }
// public void context(yarnwrap.client.render.entity.feature.FeatureRendererContext value) { wrapperContained.context = value.wrapperContained; }
// public FeatureRenderer(yarnwrap.client.render.entity.feature.FeatureRendererContext context) { this.wrapperContained = new net.minecraft.client.render.entity.feature.FeatureRenderer(context.wrapperContained); }
public yarnwrap.client.render.entity.model.EntityModel getContextModel() { return new yarnwrap.client.render.entity.model.EntityModel(wrapperContained.getContextModel()); }
// public yarnwrap.util.Identifier getTexture(yarnwrap.entity.Entity entity) { return new yarnwrap.util.Identifier(wrapperContained.getTexture(entity.wrapperContained)); }
// public void render(yarnwrap.client.render.entity.model.EntityModel contextModel,yarnwrap.client.render.entity.model.EntityModel model,yarnwrap.util.Identifier texture,yarnwrap.client.util.math.MatrixStack matrices,yarnwrap.client.render.VertexConsumerProvider vertexConsumers,int light,yarnwrap.entity.LivingEntity entity,float limbAngle,float limbDistance,float age,float headYaw,float headPitch,float tickDelta) { wrapperContained.render(contextModel.wrapperContained,model.wrapperContained,texture.wrapperContained,matrices.wrapperContained,vertexConsumers.wrapperContained,light,entity.wrapperContained,limbAngle,limbDistance,age,headYaw,headPitch,tickDelta); }
// public void renderModel(yarnwrap.client.render.entity.model.EntityModel model,yarnwrap.util.Identifier texture,yarnwrap.client.util.math.MatrixStack matrices,yarnwrap.client.render.VertexConsumerProvider vertexConsumers,int light,yarnwrap.entity.LivingEntity entity) { wrapperContained.renderModel(model.wrapperContained,texture.wrapperContained,matrices.wrapperContained,vertexConsumers.wrapperContained,light,entity.wrapperContained); }
public void render(yarnwrap.client.util.math.MatrixStack matrices,yarnwrap.client.render.VertexConsumerProvider vertexConsumers,int light,yarnwrap.entity.Entity entity,float limbAngle,float limbDistance,float tickDelta,float animationProgress,float headYaw,float headPitch) { wrapperContained.render(matrices.wrapperContained,vertexConsumers.wrapperContained,light,entity.wrapperContained,limbAngle,limbDistance,tickDelta,animationProgress,headYaw,headPitch); }

}
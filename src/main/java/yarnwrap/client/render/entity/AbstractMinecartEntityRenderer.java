package yarnwrap.client.render.entity;
public class AbstractMinecartEntityRenderer { public net.minecraft.client.render.entity.AbstractMinecartEntityRenderer wrapperContained; public AbstractMinecartEntityRenderer(net.minecraft.client.render.entity.AbstractMinecartEntityRenderer wrapperContained) { this.wrapperContained = wrapperContained; }

// public yarnwrap.util.Identifier TEXTURE() { return new yarnwrap.util.Identifier(wrapperContained.TEXTURE); }
// public void TEXTURE(yarnwrap.util.Identifier value) { wrapperContained.TEXTURE = value.wrapperContained; }
// public static yarnwrap.util.Identifier TEXTURE() { return new yarnwrap.util.Identifier(net.minecraft.client.render.entity.AbstractMinecartEntityRenderer.TEXTURE); }
// public static void TEXTURE(yarnwrap.util.Identifier value, ) { net.minecraft.client.render.entity.AbstractMinecartEntityRenderer.TEXTURE = value.wrapperContained; }

// public yarnwrap.client.render.entity.model.MinecartEntityModel model() { return new yarnwrap.client.render.entity.model.MinecartEntityModel(wrapperContained.model); }
// public void model(yarnwrap.client.render.entity.model.MinecartEntityModel value) { wrapperContained.model = value.wrapperContained; }
// public static yarnwrap.client.render.entity.model.MinecartEntityModel model() { return new yarnwrap.client.render.entity.model.MinecartEntityModel(net.minecraft.client.render.entity.AbstractMinecartEntityRenderer.model); }
// public static void model(yarnwrap.client.render.entity.model.MinecartEntityModel value, ) { net.minecraft.client.render.entity.AbstractMinecartEntityRenderer.model = value.wrapperContained; }

// public yarnwrap.client.render.block.BlockRenderManager blockRenderManager() { return new yarnwrap.client.render.block.BlockRenderManager(wrapperContained.blockRenderManager); }
// public void blockRenderManager(yarnwrap.client.render.block.BlockRenderManager value) { wrapperContained.blockRenderManager = value.wrapperContained; }
// public static yarnwrap.client.render.block.BlockRenderManager blockRenderManager() { return new yarnwrap.client.render.block.BlockRenderManager(net.minecraft.client.render.entity.AbstractMinecartEntityRenderer.blockRenderManager); }
// public static void blockRenderManager(yarnwrap.client.render.block.BlockRenderManager value, ) { net.minecraft.client.render.entity.AbstractMinecartEntityRenderer.blockRenderManager = value.wrapperContained; }

// public AbstractMinecartEntityRenderer(Object ctx,yarnwrap.client.render.entity.model.EntityModelLayer layer) { this.wrapperContained = new net.minecraft.client.render.entity.AbstractMinecartEntityRenderer(ctx,layer.wrapperContained); }
// public void renderBlock(yarnwrap.client.render.entity.state.MinecartEntityRenderState state,yarnwrap.block.BlockState blockState,yarnwrap.client.util.math.MatrixStack matrices,yarnwrap.client.render.VertexConsumerProvider vertexConsumers,int light) { wrapperContained.renderBlock(state.wrapperContained,blockState.wrapperContained,matrices.wrapperContained,vertexConsumers.wrapperContained,light); }
// public static void renderBlock(yarnwrap.client.render.entity.state.MinecartEntityRenderState state,yarnwrap.block.BlockState blockState,yarnwrap.client.util.math.MatrixStack matrices,yarnwrap.client.render.VertexConsumerProvider vertexConsumers,int light, ) { net.minecraft.client.render.entity.AbstractMinecartEntityRenderer.renderBlock(state.wrapperContained,blockState.wrapperContained,matrices.wrapperContained,vertexConsumers.wrapperContained,light); }
// public void updateFromExperimentalController(yarnwrap.entity.vehicle.AbstractMinecartEntity minecart,yarnwrap.entity.vehicle.ExperimentalMinecartController controller,yarnwrap.client.render.entity.state.MinecartEntityRenderState state,float tickProgress) { wrapperContained.updateFromExperimentalController(minecart.wrapperContained,controller.wrapperContained,state.wrapperContained,tickProgress); }
// public static void updateFromExperimentalController(yarnwrap.entity.vehicle.AbstractMinecartEntity minecart,yarnwrap.entity.vehicle.ExperimentalMinecartController controller,yarnwrap.client.render.entity.state.MinecartEntityRenderState state,float tickProgress, ) { net.minecraft.client.render.entity.AbstractMinecartEntityRenderer.updateFromExperimentalController(minecart.wrapperContained,controller.wrapperContained,state.wrapperContained,tickProgress); }
// public void updateFromDefaultController(yarnwrap.entity.vehicle.AbstractMinecartEntity minecart,yarnwrap.entity.vehicle.DefaultMinecartController controller,yarnwrap.client.render.entity.state.MinecartEntityRenderState state,float tickProgress) { wrapperContained.updateFromDefaultController(minecart.wrapperContained,controller.wrapperContained,state.wrapperContained,tickProgress); }
// public static void updateFromDefaultController(yarnwrap.entity.vehicle.AbstractMinecartEntity minecart,yarnwrap.entity.vehicle.DefaultMinecartController controller,yarnwrap.client.render.entity.state.MinecartEntityRenderState state,float tickProgress, ) { net.minecraft.client.render.entity.AbstractMinecartEntityRenderer.updateFromDefaultController(minecart.wrapperContained,controller.wrapperContained,state.wrapperContained,tickProgress); }
// public void transformExperimentalControllerMinecart(yarnwrap.client.render.entity.state.MinecartEntityRenderState state,yarnwrap.client.util.math.MatrixStack matrices) { wrapperContained.transformExperimentalControllerMinecart(state.wrapperContained,matrices.wrapperContained); }
// public static void transformExperimentalControllerMinecart(yarnwrap.client.render.entity.state.MinecartEntityRenderState state,yarnwrap.client.util.math.MatrixStack matrices, ) { net.minecraft.client.render.entity.AbstractMinecartEntityRenderer.transformExperimentalControllerMinecart(state.wrapperContained,matrices.wrapperContained); }
// public void transformDefaultControllerMinecart(yarnwrap.client.render.entity.state.MinecartEntityRenderState state,yarnwrap.client.util.math.MatrixStack matrices) { wrapperContained.transformDefaultControllerMinecart(state.wrapperContained,matrices.wrapperContained); }
// public static void transformDefaultControllerMinecart(yarnwrap.client.render.entity.state.MinecartEntityRenderState state,yarnwrap.client.util.math.MatrixStack matrices, ) { net.minecraft.client.render.entity.AbstractMinecartEntityRenderer.transformDefaultControllerMinecart(state.wrapperContained,matrices.wrapperContained); }

}
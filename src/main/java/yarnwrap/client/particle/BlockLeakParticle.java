package yarnwrap.client.particle;
public class BlockLeakParticle { public net.minecraft.client.particle.BlockLeakParticle wrapperContained; public BlockLeakParticle(net.minecraft.client.particle.BlockLeakParticle wrapperContained) { this.wrapperContained = wrapperContained; }

// public boolean obsidianTear() { return wrapperContained.obsidianTear; }
// public void obsidianTear(boolean value) { wrapperContained.obsidianTear = value; }
// public yarnwrap.fluid.Fluid fluid() { return new yarnwrap.fluid.Fluid(wrapperContained.fluid); }
// public void fluid(yarnwrap.fluid.Fluid value) { wrapperContained.fluid = value.wrapperContained; }
// public void updateAge() { wrapperContained.updateAge(); }
// public void updateVelocity() { wrapperContained.updateVelocity(); }
// public yarnwrap.fluid.Fluid getFluid() { return new yarnwrap.fluid.Fluid(wrapperContained.getFluid()); }
public yarnwrap.client.particle.SpriteBillboardParticle createDrippingWater(yarnwrap.particle.SimpleParticleType type,yarnwrap.client.world.ClientWorld world,double x,double y,double z,double velocityX,double velocityY,double velocityZ) { return new yarnwrap.client.particle.SpriteBillboardParticle(wrapperContained.createDrippingWater(type.wrapperContained,world.wrapperContained,x,y,z,velocityX,velocityY,velocityZ)); }
public yarnwrap.client.particle.SpriteBillboardParticle createFallingWater(yarnwrap.particle.SimpleParticleType type,yarnwrap.client.world.ClientWorld world,double x,double y,double z,double velocityX,double velocityY,double velocityZ) { return new yarnwrap.client.particle.SpriteBillboardParticle(wrapperContained.createFallingWater(type.wrapperContained,world.wrapperContained,x,y,z,velocityX,velocityY,velocityZ)); }
public yarnwrap.client.particle.SpriteBillboardParticle createDrippingLava(yarnwrap.particle.SimpleParticleType type,yarnwrap.client.world.ClientWorld world,double x,double y,double z,double velocityX,double velocityY,double velocityZ) { return new yarnwrap.client.particle.SpriteBillboardParticle(wrapperContained.createDrippingLava(type.wrapperContained,world.wrapperContained,x,y,z,velocityX,velocityY,velocityZ)); }
public yarnwrap.client.particle.SpriteBillboardParticle createFallingLava(yarnwrap.particle.SimpleParticleType type,yarnwrap.client.world.ClientWorld world,double x,double y,double z,double velocityX,double velocityY,double velocityZ) { return new yarnwrap.client.particle.SpriteBillboardParticle(wrapperContained.createFallingLava(type.wrapperContained,world.wrapperContained,x,y,z,velocityX,velocityY,velocityZ)); }
public yarnwrap.client.particle.SpriteBillboardParticle createLandingLava(yarnwrap.particle.SimpleParticleType type,yarnwrap.client.world.ClientWorld world,double x,double y,double z,double velocityX,double velocityY,double velocityZ) { return new yarnwrap.client.particle.SpriteBillboardParticle(wrapperContained.createLandingLava(type.wrapperContained,world.wrapperContained,x,y,z,velocityX,velocityY,velocityZ)); }
public yarnwrap.client.particle.SpriteBillboardParticle createDrippingHoney(yarnwrap.particle.SimpleParticleType type,yarnwrap.client.world.ClientWorld world,double x,double y,double z,double velocityX,double velocityY,double velocityZ) { return new yarnwrap.client.particle.SpriteBillboardParticle(wrapperContained.createDrippingHoney(type.wrapperContained,world.wrapperContained,x,y,z,velocityX,velocityY,velocityZ)); }
public yarnwrap.client.particle.SpriteBillboardParticle createFallingHoney(yarnwrap.particle.SimpleParticleType type,yarnwrap.client.world.ClientWorld world,double x,double y,double z,double velocityX,double velocityY,double velocityZ) { return new yarnwrap.client.particle.SpriteBillboardParticle(wrapperContained.createFallingHoney(type.wrapperContained,world.wrapperContained,x,y,z,velocityX,velocityY,velocityZ)); }
public yarnwrap.client.particle.SpriteBillboardParticle createLandingHoney(yarnwrap.particle.SimpleParticleType type,yarnwrap.client.world.ClientWorld world,double x,double y,double z,double velocityX,double velocityY,double velocityZ) { return new yarnwrap.client.particle.SpriteBillboardParticle(wrapperContained.createLandingHoney(type.wrapperContained,world.wrapperContained,x,y,z,velocityX,velocityY,velocityZ)); }
public yarnwrap.client.particle.SpriteBillboardParticle createDrippingDripstoneWater(yarnwrap.particle.SimpleParticleType type,yarnwrap.client.world.ClientWorld world,double x,double y,double z,double velocityX,double velocityY,double velocityZ) { return new yarnwrap.client.particle.SpriteBillboardParticle(wrapperContained.createDrippingDripstoneWater(type.wrapperContained,world.wrapperContained,x,y,z,velocityX,velocityY,velocityZ)); }
public yarnwrap.client.particle.SpriteBillboardParticle createFallingDripstoneWater(yarnwrap.particle.SimpleParticleType type,yarnwrap.client.world.ClientWorld world,double x,double y,double z,double velocityX,double velocityY,double velocityZ) { return new yarnwrap.client.particle.SpriteBillboardParticle(wrapperContained.createFallingDripstoneWater(type.wrapperContained,world.wrapperContained,x,y,z,velocityX,velocityY,velocityZ)); }
public yarnwrap.client.particle.SpriteBillboardParticle createDrippingDripstoneLava(yarnwrap.particle.SimpleParticleType type,yarnwrap.client.world.ClientWorld world,double x,double y,double z,double velocityX,double velocityY,double velocityZ) { return new yarnwrap.client.particle.SpriteBillboardParticle(wrapperContained.createDrippingDripstoneLava(type.wrapperContained,world.wrapperContained,x,y,z,velocityX,velocityY,velocityZ)); }
public yarnwrap.client.particle.SpriteBillboardParticle createFallingDripstoneLava(yarnwrap.particle.SimpleParticleType type,yarnwrap.client.world.ClientWorld world,double x,double y,double z,double velocityX,double velocityY,double velocityZ) { return new yarnwrap.client.particle.SpriteBillboardParticle(wrapperContained.createFallingDripstoneLava(type.wrapperContained,world.wrapperContained,x,y,z,velocityX,velocityY,velocityZ)); }
public yarnwrap.client.particle.SpriteBillboardParticle createFallingNectar(yarnwrap.particle.SimpleParticleType type,yarnwrap.client.world.ClientWorld world,double x,double y,double z,double velocityX,double velocityY,double velocityZ) { return new yarnwrap.client.particle.SpriteBillboardParticle(wrapperContained.createFallingNectar(type.wrapperContained,world.wrapperContained,x,y,z,velocityX,velocityY,velocityZ)); }
public yarnwrap.client.particle.SpriteBillboardParticle createFallingSporeBlossom(yarnwrap.particle.SimpleParticleType type,yarnwrap.client.world.ClientWorld world,double x,double y,double z,double velocityX,double velocityY,double velocityZ) { return new yarnwrap.client.particle.SpriteBillboardParticle(wrapperContained.createFallingSporeBlossom(type.wrapperContained,world.wrapperContained,x,y,z,velocityX,velocityY,velocityZ)); }
public yarnwrap.client.particle.SpriteBillboardParticle createDrippingObsidianTear(yarnwrap.particle.SimpleParticleType type,yarnwrap.client.world.ClientWorld world,double x,double y,double z,double velocityX,double velocityY,double velocityZ) { return new yarnwrap.client.particle.SpriteBillboardParticle(wrapperContained.createDrippingObsidianTear(type.wrapperContained,world.wrapperContained,x,y,z,velocityX,velocityY,velocityZ)); }
public yarnwrap.client.particle.SpriteBillboardParticle createFallingObsidianTear(yarnwrap.particle.SimpleParticleType type,yarnwrap.client.world.ClientWorld world,double x,double y,double z,double velocityX,double velocityY,double velocityZ) { return new yarnwrap.client.particle.SpriteBillboardParticle(wrapperContained.createFallingObsidianTear(type.wrapperContained,world.wrapperContained,x,y,z,velocityX,velocityY,velocityZ)); }
public yarnwrap.client.particle.SpriteBillboardParticle createLandingObsidianTear(yarnwrap.particle.SimpleParticleType type,yarnwrap.client.world.ClientWorld world,double x,double y,double z,double velocityX,double velocityY,double velocityZ) { return new yarnwrap.client.particle.SpriteBillboardParticle(wrapperContained.createLandingObsidianTear(type.wrapperContained,world.wrapperContained,x,y,z,velocityX,velocityY,velocityZ)); }

}
package yarnwrap.entity.ai.brain.task;
public class TargetUtil { public net.minecraft.entity.ai.brain.task.TargetUtil wrapperContained; public TargetUtil(net.minecraft.entity.ai.brain.task.TargetUtil wrapperContained) { this.wrapperContained = wrapperContained; }

// public boolean method_19547(yarnwrap.entity.EntityType entity) { return wrapperContained.method_19547(entity.wrapperContained); }
// public static boolean method_19547(yarnwrap.entity.EntityType entity, ) { return net.minecraft.entity.ai.brain.task.TargetUtil.method_19547(entity.wrapperContained); }
// public void lookAtAndWalkTowardsEachOther(yarnwrap.entity.LivingEntity first,yarnwrap.entity.LivingEntity second,float speed,int walkCompletionRange) { wrapperContained.lookAtAndWalkTowardsEachOther(first.wrapperContained,second.wrapperContained,speed,walkCompletionRange); }
// public static void lookAtAndWalkTowardsEachOther(yarnwrap.entity.LivingEntity first,yarnwrap.entity.LivingEntity second,float speed,int walkCompletionRange, ) { net.minecraft.entity.ai.brain.task.TargetUtil.lookAtAndWalkTowardsEachOther(first.wrapperContained,second.wrapperContained,speed,walkCompletionRange); }
// public boolean canSee(yarnwrap.entity.ai.brain.Brain brain,yarnwrap.entity.LivingEntity target) { return wrapperContained.canSee(brain.wrapperContained,target.wrapperContained); }
// public static boolean canSee(yarnwrap.entity.ai.brain.Brain brain,yarnwrap.entity.LivingEntity target, ) { return net.minecraft.entity.ai.brain.task.TargetUtil.canSee(brain.wrapperContained,target.wrapperContained); }
// public boolean canSee(yarnwrap.entity.ai.brain.Brain brain,yarnwrap.entity.ai.brain.MemoryModuleType memoryModuleType,yarnwrap.entity.EntityType entityType) { return wrapperContained.canSee(brain.wrapperContained,memoryModuleType.wrapperContained,entityType.wrapperContained); }
// public static boolean canSee(yarnwrap.entity.ai.brain.Brain brain,yarnwrap.entity.ai.brain.MemoryModuleType memoryModuleType,yarnwrap.entity.EntityType entityType, ) { return net.minecraft.entity.ai.brain.task.TargetUtil.canSee(brain.wrapperContained,memoryModuleType.wrapperContained,entityType.wrapperContained); }
// public void lookAtEachOther(yarnwrap.entity.LivingEntity first,yarnwrap.entity.LivingEntity second) { wrapperContained.lookAtEachOther(first.wrapperContained,second.wrapperContained); }
// public static void lookAtEachOther(yarnwrap.entity.LivingEntity first,yarnwrap.entity.LivingEntity second, ) { net.minecraft.entity.ai.brain.task.TargetUtil.lookAtEachOther(first.wrapperContained,second.wrapperContained); }
// public boolean method_19553(yarnwrap.entity.ai.brain.Brain target) { return wrapperContained.method_19553(target.wrapperContained); }
// public static boolean method_19553(yarnwrap.entity.ai.brain.Brain target, ) { return net.minecraft.entity.ai.brain.task.TargetUtil.method_19553(target.wrapperContained); }
// public void lookAt(yarnwrap.entity.LivingEntity entity,yarnwrap.entity.LivingEntity target) { wrapperContained.lookAt(entity.wrapperContained,target.wrapperContained); }
// public static void lookAt(yarnwrap.entity.LivingEntity entity,yarnwrap.entity.LivingEntity target, ) { net.minecraft.entity.ai.brain.task.TargetUtil.lookAt(entity.wrapperContained,target.wrapperContained); }
// public void walkTowardsEachOther(yarnwrap.entity.LivingEntity first,yarnwrap.entity.LivingEntity second,float speed,int completionRange) { wrapperContained.walkTowardsEachOther(first.wrapperContained,second.wrapperContained,speed,completionRange); }
// public static void walkTowardsEachOther(yarnwrap.entity.LivingEntity first,yarnwrap.entity.LivingEntity second,float speed,int completionRange, ) { net.minecraft.entity.ai.brain.task.TargetUtil.walkTowardsEachOther(first.wrapperContained,second.wrapperContained,speed,completionRange); }
// public void give(yarnwrap.entity.LivingEntity entity,yarnwrap.item.ItemStack stack,yarnwrap.util.math.Vec3d targetLocation) { wrapperContained.give(entity.wrapperContained,stack.wrapperContained,targetLocation.wrapperContained); }
// public static void give(yarnwrap.entity.LivingEntity entity,yarnwrap.item.ItemStack stack,yarnwrap.util.math.Vec3d targetLocation, ) { net.minecraft.entity.ai.brain.task.TargetUtil.give(entity.wrapperContained,stack.wrapperContained,targetLocation.wrapperContained); }
// public boolean method_20418(yarnwrap.server.world.ServerWorld sectionPos) { return wrapperContained.method_20418(sectionPos.wrapperContained); }
// public static boolean method_20418(yarnwrap.server.world.ServerWorld sectionPos, ) { return net.minecraft.entity.ai.brain.task.TargetUtil.method_20418(sectionPos.wrapperContained); }
// public yarnwrap.util.math.ChunkSectionPos getPosClosestToOccupiedPointOfInterest(yarnwrap.server.world.ServerWorld world,yarnwrap.util.math.ChunkSectionPos center,int radius) { return new yarnwrap.util.math.ChunkSectionPos(wrapperContained.getPosClosestToOccupiedPointOfInterest(world.wrapperContained,center.wrapperContained,radius)); }
// public static yarnwrap.util.math.ChunkSectionPos getPosClosestToOccupiedPointOfInterest(yarnwrap.server.world.ServerWorld world,yarnwrap.util.math.ChunkSectionPos center,int radius, ) { return new yarnwrap.util.math.ChunkSectionPos(net.minecraft.entity.ai.brain.task.TargetUtil.getPosClosestToOccupiedPointOfInterest(world.wrapperContained,center.wrapperContained,radius)); }
// public void walkTowards(yarnwrap.entity.LivingEntity entity,yarnwrap.entity.Entity target,float speed,int completionRange) { wrapperContained.walkTowards(entity.wrapperContained,target.wrapperContained,speed,completionRange); }
// public static void walkTowards(yarnwrap.entity.LivingEntity entity,yarnwrap.entity.Entity target,float speed,int completionRange, ) { net.minecraft.entity.ai.brain.task.TargetUtil.walkTowards(entity.wrapperContained,target.wrapperContained,speed,completionRange); }
// public boolean isNewTargetTooFar(yarnwrap.entity.LivingEntity source,yarnwrap.entity.LivingEntity target,double extraDistance) { return wrapperContained.isNewTargetTooFar(source.wrapperContained,target.wrapperContained,extraDistance); }
// public static boolean isNewTargetTooFar(yarnwrap.entity.LivingEntity source,yarnwrap.entity.LivingEntity target,double extraDistance, ) { return net.minecraft.entity.ai.brain.task.TargetUtil.isNewTargetTooFar(source.wrapperContained,target.wrapperContained,extraDistance); }
// public yarnwrap.entity.LivingEntity getCloserEntity(yarnwrap.entity.LivingEntity source,yarnwrap.entity.LivingEntity first,yarnwrap.entity.LivingEntity second) { return new yarnwrap.entity.LivingEntity(wrapperContained.getCloserEntity(source.wrapperContained,first.wrapperContained,second.wrapperContained)); }
// public static yarnwrap.entity.LivingEntity getCloserEntity(yarnwrap.entity.LivingEntity source,yarnwrap.entity.LivingEntity first,yarnwrap.entity.LivingEntity second, ) { return new yarnwrap.entity.LivingEntity(net.minecraft.entity.ai.brain.task.TargetUtil.getCloserEntity(source.wrapperContained,first.wrapperContained,second.wrapperContained)); }
// public java.util.Optional getEntity(yarnwrap.entity.LivingEntity entity,yarnwrap.entity.ai.brain.MemoryModuleType uuidMemoryModule) { return wrapperContained.getEntity(entity.wrapperContained,uuidMemoryModule.wrapperContained); }
// public static java.util.Optional getEntity(yarnwrap.entity.LivingEntity entity,yarnwrap.entity.ai.brain.MemoryModuleType uuidMemoryModule, ) { return net.minecraft.entity.ai.brain.task.TargetUtil.getEntity(entity.wrapperContained,uuidMemoryModule.wrapperContained); }
// public void walkTowards(yarnwrap.entity.LivingEntity entity,yarnwrap.util.math.BlockPos target,float speed,int completionRange) { wrapperContained.walkTowards(entity.wrapperContained,target.wrapperContained,speed,completionRange); }
// public static void walkTowards(yarnwrap.entity.LivingEntity entity,yarnwrap.util.math.BlockPos target,float speed,int completionRange, ) { net.minecraft.entity.ai.brain.task.TargetUtil.walkTowards(entity.wrapperContained,target.wrapperContained,speed,completionRange); }
// public yarnwrap.entity.LivingEntity getCloserEntity(yarnwrap.entity.LivingEntity source,java.util.Optional first,yarnwrap.entity.LivingEntity second) { return new yarnwrap.entity.LivingEntity(wrapperContained.getCloserEntity(source.wrapperContained,first,second.wrapperContained)); }
// public static yarnwrap.entity.LivingEntity getCloserEntity(yarnwrap.entity.LivingEntity source,java.util.Optional first,yarnwrap.entity.LivingEntity second, ) { return new yarnwrap.entity.LivingEntity(net.minecraft.entity.ai.brain.task.TargetUtil.getCloserEntity(source.wrapperContained,first,second.wrapperContained)); }
// public yarnwrap.entity.Entity method_24563(yarnwrap.entity.LivingEntity uuid) { return new yarnwrap.entity.Entity(wrapperContained.method_24563(uuid.wrapperContained)); }
// public static yarnwrap.entity.Entity method_24563(yarnwrap.entity.LivingEntity uuid, ) { return new yarnwrap.entity.Entity(net.minecraft.entity.ai.brain.task.TargetUtil.method_24563(uuid.wrapperContained)); }
// public boolean canSee(yarnwrap.entity.ai.brain.Brain brain,yarnwrap.entity.ai.brain.MemoryModuleType memoryType,java.util.function.Predicate filter) { return wrapperContained.canSee(brain.wrapperContained,memoryType.wrapperContained,filter); }
// public static boolean canSee(yarnwrap.entity.ai.brain.Brain brain,yarnwrap.entity.ai.brain.MemoryModuleType memoryType,java.util.function.Predicate filter, ) { return net.minecraft.entity.ai.brain.task.TargetUtil.canSee(brain.wrapperContained,memoryType.wrapperContained,filter); }
// public boolean isVisibleInMemory(yarnwrap.entity.LivingEntity source,yarnwrap.entity.LivingEntity target) { return wrapperContained.isVisibleInMemory(source.wrapperContained,target.wrapperContained); }
// public static boolean isVisibleInMemory(yarnwrap.entity.LivingEntity source,yarnwrap.entity.LivingEntity target, ) { return net.minecraft.entity.ai.brain.task.TargetUtil.isVisibleInMemory(source.wrapperContained,target.wrapperContained); }
// public boolean isTargetWithinAttackRange(yarnwrap.entity.mob.MobEntity mob,yarnwrap.entity.LivingEntity target,int rangedWeaponReachReduction) { return wrapperContained.isTargetWithinAttackRange(mob.wrapperContained,target.wrapperContained,rangedWeaponReachReduction); }
// public static boolean isTargetWithinAttackRange(yarnwrap.entity.mob.MobEntity mob,yarnwrap.entity.LivingEntity target,int rangedWeaponReachReduction, ) { return net.minecraft.entity.ai.brain.task.TargetUtil.isTargetWithinAttackRange(mob.wrapperContained,target.wrapperContained,rangedWeaponReachReduction); }
// public yarnwrap.entity.LivingEntity method_31500(yarnwrap.entity.Entity target) { return new yarnwrap.entity.LivingEntity(wrapperContained.method_31500(target.wrapperContained)); }
// public static yarnwrap.entity.LivingEntity method_31500(yarnwrap.entity.Entity target, ) { return new yarnwrap.entity.LivingEntity(net.minecraft.entity.ai.brain.task.TargetUtil.method_31500(target.wrapperContained)); }
// public yarnwrap.util.math.Vec3d find(yarnwrap.entity.mob.PathAwareEntity entity,int horizontalRange,int verticalRange) { return new yarnwrap.util.math.Vec3d(wrapperContained.find(entity.wrapperContained,horizontalRange,verticalRange)); }
// public static yarnwrap.util.math.Vec3d find(yarnwrap.entity.mob.PathAwareEntity entity,int horizontalRange,int verticalRange, ) { return new yarnwrap.util.math.Vec3d(net.minecraft.entity.ai.brain.task.TargetUtil.find(entity.wrapperContained,horizontalRange,verticalRange)); }
// public boolean hasBreedTarget(yarnwrap.entity.LivingEntity entity) { return wrapperContained.hasBreedTarget(entity.wrapperContained); }
// public static boolean hasBreedTarget(yarnwrap.entity.LivingEntity entity, ) { return net.minecraft.entity.ai.brain.task.TargetUtil.hasBreedTarget(entity.wrapperContained); }
// public void walkTowards(yarnwrap.entity.LivingEntity entity,yarnwrap.entity.ai.brain.LookTarget target,float speed,int completionRange) { wrapperContained.walkTowards(entity.wrapperContained,target.wrapperContained,speed,completionRange); }
// public static void walkTowards(yarnwrap.entity.LivingEntity entity,yarnwrap.entity.ai.brain.LookTarget target,float speed,int completionRange, ) { net.minecraft.entity.ai.brain.task.TargetUtil.walkTowards(entity.wrapperContained,target.wrapperContained,speed,completionRange); }
// public void give(yarnwrap.entity.LivingEntity entity,yarnwrap.item.ItemStack stack,yarnwrap.util.math.Vec3d targetLocation,yarnwrap.util.math.Vec3d velocityFactor,float yOffset) { wrapperContained.give(entity.wrapperContained,stack.wrapperContained,targetLocation.wrapperContained,velocityFactor.wrapperContained,yOffset); }
// public static void give(yarnwrap.entity.LivingEntity entity,yarnwrap.item.ItemStack stack,yarnwrap.util.math.Vec3d targetLocation,yarnwrap.util.math.Vec3d velocityFactor,float yOffset, ) { net.minecraft.entity.ai.brain.task.TargetUtil.give(entity.wrapperContained,stack.wrapperContained,targetLocation.wrapperContained,velocityFactor.wrapperContained,yOffset); }

}
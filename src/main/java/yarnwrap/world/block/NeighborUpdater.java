package yarnwrap.world.block;
public class NeighborUpdater { public net.minecraft.world.block.NeighborUpdater wrapperContained; public NeighborUpdater(net.minecraft.world.block.NeighborUpdater wrapperContained) { this.wrapperContained = wrapperContained; }

// public net.minecraft.util.math.Direction[] UPDATE_ORDER() { return wrapperContained.UPDATE_ORDER; }
// public void UPDATE_ORDER(net.minecraft.util.math.Direction[] value) { wrapperContained.UPDATE_ORDER = value; }
public static net.minecraft.util.math.Direction[] UPDATE_ORDER() { return net.minecraft.world.block.NeighborUpdater.UPDATE_ORDER; }
// public static void UPDATE_ORDER(net.minecraft.util.math.Direction[] value, ) { net.minecraft.world.block.NeighborUpdater.UPDATE_ORDER = value; }

public void updateNeighbor(yarnwrap.block.BlockState state,yarnwrap.util.math.BlockPos pos,yarnwrap.block.Block sourceBlock,yarnwrap.util.math.BlockPos sourcePos,boolean notify) { wrapperContained.updateNeighbor(state.wrapperContained,pos.wrapperContained,sourceBlock.wrapperContained,sourcePos.wrapperContained,notify); }
// public static void updateNeighbor(yarnwrap.block.BlockState state,yarnwrap.util.math.BlockPos pos,yarnwrap.block.Block sourceBlock,yarnwrap.util.math.BlockPos sourcePos,boolean notify, ) { net.minecraft.world.block.NeighborUpdater.updateNeighbor(state.wrapperContained,pos.wrapperContained,sourceBlock.wrapperContained,sourcePos.wrapperContained,notify); }
public void updateNeighbor(yarnwrap.util.math.BlockPos pos,yarnwrap.block.Block sourceBlock,yarnwrap.util.math.BlockPos sourcePos) { wrapperContained.updateNeighbor(pos.wrapperContained,sourceBlock.wrapperContained,sourcePos.wrapperContained); }
// public static void updateNeighbor(yarnwrap.util.math.BlockPos pos,yarnwrap.block.Block sourceBlock,yarnwrap.util.math.BlockPos sourcePos, ) { net.minecraft.world.block.NeighborUpdater.updateNeighbor(pos.wrapperContained,sourceBlock.wrapperContained,sourcePos.wrapperContained); }
public void updateNeighbors(yarnwrap.util.math.BlockPos pos,yarnwrap.block.Block sourceBlock,yarnwrap.util.math.Direction except) { wrapperContained.updateNeighbors(pos.wrapperContained,sourceBlock.wrapperContained,except.wrapperContained); }
// public static void updateNeighbors(yarnwrap.util.math.BlockPos pos,yarnwrap.block.Block sourceBlock,yarnwrap.util.math.Direction except, ) { net.minecraft.world.block.NeighborUpdater.updateNeighbors(pos.wrapperContained,sourceBlock.wrapperContained,except.wrapperContained); }
// public void tryNeighborUpdate(yarnwrap.world.World world,yarnwrap.block.BlockState state,yarnwrap.util.math.BlockPos pos,yarnwrap.block.Block sourceBlock,yarnwrap.util.math.BlockPos sourcePos,boolean notify) { wrapperContained.tryNeighborUpdate(world.wrapperContained,state.wrapperContained,pos.wrapperContained,sourceBlock.wrapperContained,sourcePos.wrapperContained,notify); }
// public static void tryNeighborUpdate(yarnwrap.world.World world,yarnwrap.block.BlockState state,yarnwrap.util.math.BlockPos pos,yarnwrap.block.Block sourceBlock,yarnwrap.util.math.BlockPos sourcePos,boolean notify, ) { net.minecraft.world.block.NeighborUpdater.tryNeighborUpdate(world.wrapperContained,state.wrapperContained,pos.wrapperContained,sourceBlock.wrapperContained,sourcePos.wrapperContained,notify); }
public void replaceWithStateForNeighborUpdate(yarnwrap.util.math.Direction direction,yarnwrap.block.BlockState neighborState,yarnwrap.util.math.BlockPos pos,yarnwrap.util.math.BlockPos neighborPos,int flags,int maxUpdateDepth) { wrapperContained.replaceWithStateForNeighborUpdate(direction.wrapperContained,neighborState.wrapperContained,pos.wrapperContained,neighborPos.wrapperContained,flags,maxUpdateDepth); }
// public static void replaceWithStateForNeighborUpdate(yarnwrap.util.math.Direction direction,yarnwrap.block.BlockState neighborState,yarnwrap.util.math.BlockPos pos,yarnwrap.util.math.BlockPos neighborPos,int flags,int maxUpdateDepth, ) { net.minecraft.world.block.NeighborUpdater.replaceWithStateForNeighborUpdate(direction.wrapperContained,neighborState.wrapperContained,pos.wrapperContained,neighborPos.wrapperContained,flags,maxUpdateDepth); }
// public void replaceWithStateForNeighborUpdate(yarnwrap.world.WorldAccess world,yarnwrap.util.math.Direction direction,yarnwrap.block.BlockState neighborState,yarnwrap.util.math.BlockPos pos,yarnwrap.util.math.BlockPos neighborPos,int flags,int maxUpdateDepth) { wrapperContained.replaceWithStateForNeighborUpdate(world.wrapperContained,direction.wrapperContained,neighborState.wrapperContained,pos.wrapperContained,neighborPos.wrapperContained,flags,maxUpdateDepth); }
// public static void replaceWithStateForNeighborUpdate(yarnwrap.world.WorldAccess world,yarnwrap.util.math.Direction direction,yarnwrap.block.BlockState neighborState,yarnwrap.util.math.BlockPos pos,yarnwrap.util.math.BlockPos neighborPos,int flags,int maxUpdateDepth, ) { net.minecraft.world.block.NeighborUpdater.replaceWithStateForNeighborUpdate(world.wrapperContained,direction.wrapperContained,neighborState.wrapperContained,pos.wrapperContained,neighborPos.wrapperContained,flags,maxUpdateDepth); }

}
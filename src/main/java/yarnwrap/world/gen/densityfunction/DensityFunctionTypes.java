package yarnwrap.world.gen.densityfunction;
public class DensityFunctionTypes { public net.minecraft.world.gen.densityfunction.DensityFunctionTypes wrapperContained; public DensityFunctionTypes(net.minecraft.world.gen.densityfunction.DensityFunctionTypes wrapperContained) { this.wrapperContained = wrapperContained; }

// public double MAX_CONSTANT_VALUE() { return wrapperContained.MAX_CONSTANT_VALUE; }
// public void MAX_CONSTANT_VALUE(double value) { wrapperContained.MAX_CONSTANT_VALUE = value; }
public com.mojang.serialization.Codec CODEC() { return wrapperContained.CODEC; }
// public void CODEC(com.mojang.serialization.Codec value) { wrapperContained.CODEC = value; }
// public com.mojang.serialization.Codec DYNAMIC_RANGE() { return wrapperContained.DYNAMIC_RANGE; }
// public void DYNAMIC_RANGE(com.mojang.serialization.Codec value) { wrapperContained.DYNAMIC_RANGE = value; }
// public com.mojang.serialization.Codec CONSTANT_RANGE() { return wrapperContained.CONSTANT_RANGE; }
// public void CONSTANT_RANGE(com.mojang.serialization.Codec value) { wrapperContained.CONSTANT_RANGE = value; }
public yarnwrap.world.gen.densityfunction.DensityFunction zero() { return new yarnwrap.world.gen.densityfunction.DensityFunction(wrapperContained.zero()); }
public yarnwrap.world.gen.densityfunction.DensityFunction constant(double density) { return new yarnwrap.world.gen.densityfunction.DensityFunction(wrapperContained.constant(density)); }
public yarnwrap.world.gen.densityfunction.DensityFunction yClampedGradient(int fromY,int toY,double fromValue,double toValue) { return new yarnwrap.world.gen.densityfunction.DensityFunction(wrapperContained.yClampedGradient(fromY,toY,fromValue,toValue)); }
public yarnwrap.world.gen.densityfunction.DensityFunction endIslands(long seed) { return new yarnwrap.world.gen.densityfunction.DensityFunction(wrapperContained.endIslands(seed)); }
public yarnwrap.world.gen.densityfunction.DensityFunction interpolated(yarnwrap.world.gen.densityfunction.DensityFunction inputFunction) { return new yarnwrap.world.gen.densityfunction.DensityFunction(wrapperContained.interpolated(inputFunction.wrapperContained)); }
// public yarnwrap.world.gen.densityfunction.DensityFunction mapRange(yarnwrap.world.gen.densityfunction.DensityFunction function,double min,double max) { return new yarnwrap.world.gen.densityfunction.DensityFunction(wrapperContained.mapRange(function.wrapperContained,min,max)); }
public yarnwrap.world.gen.densityfunction.DensityFunction rangeChoice(yarnwrap.world.gen.densityfunction.DensityFunction input,double minInclusive,double maxExclusive,yarnwrap.world.gen.densityfunction.DensityFunction whenInRange,yarnwrap.world.gen.densityfunction.DensityFunction whenOutOfRange) { return new yarnwrap.world.gen.densityfunction.DensityFunction(wrapperContained.rangeChoice(input.wrapperContained,minInclusive,maxExclusive,whenInRange.wrapperContained,whenOutOfRange.wrapperContained)); }
public yarnwrap.world.gen.densityfunction.DensityFunction add(yarnwrap.world.gen.densityfunction.DensityFunction a,yarnwrap.world.gen.densityfunction.DensityFunction b) { return new yarnwrap.world.gen.densityfunction.DensityFunction(wrapperContained.add(a.wrapperContained,b.wrapperContained)); }
public yarnwrap.world.gen.densityfunction.DensityFunction shiftedNoise(yarnwrap.world.gen.densityfunction.DensityFunction shiftX,yarnwrap.world.gen.densityfunction.DensityFunction shiftZ,double xzScale,yarnwrap.registry.entry.RegistryEntry noiseParameters) { return new yarnwrap.world.gen.densityfunction.DensityFunction(wrapperContained.shiftedNoise(shiftX.wrapperContained,shiftZ.wrapperContained,xzScale,noiseParameters.wrapperContained)); }
public yarnwrap.world.gen.densityfunction.DensityFunction lerp(yarnwrap.world.gen.densityfunction.DensityFunction delta,yarnwrap.world.gen.densityfunction.DensityFunction start,yarnwrap.world.gen.densityfunction.DensityFunction end) { return new yarnwrap.world.gen.densityfunction.DensityFunction(wrapperContained.lerp(delta.wrapperContained,start.wrapperContained,end.wrapperContained)); }
// public yarnwrap.world.gen.densityfunction.DensityFunction unary(yarnwrap.world.gen.densityfunction.DensityFunction input,Object type) { return new yarnwrap.world.gen.densityfunction.DensityFunction(wrapperContained.unary(input.wrapperContained,type)); }
// public yarnwrap.world.gen.densityfunction.DensityFunction weirdScaledSampler(yarnwrap.world.gen.densityfunction.DensityFunction input,yarnwrap.registry.entry.RegistryEntry parameters,Object mapper) { return new yarnwrap.world.gen.densityfunction.DensityFunction(wrapperContained.weirdScaledSampler(input.wrapperContained,parameters.wrapperContained,mapper)); }
public yarnwrap.world.gen.densityfunction.DensityFunction noise(yarnwrap.registry.entry.RegistryEntry noiseParameters) { return new yarnwrap.world.gen.densityfunction.DensityFunction(wrapperContained.noise(noiseParameters.wrapperContained)); }
public yarnwrap.world.gen.densityfunction.DensityFunction noise(yarnwrap.registry.entry.RegistryEntry noiseParameters,double scaleY) { return new yarnwrap.world.gen.densityfunction.DensityFunction(wrapperContained.noise(noiseParameters.wrapperContained,scaleY)); }
public yarnwrap.world.gen.densityfunction.DensityFunction noiseInRange(yarnwrap.registry.entry.RegistryEntry noiseParameters,double min,double max) { return new yarnwrap.world.gen.densityfunction.DensityFunction(wrapperContained.noiseInRange(noiseParameters.wrapperContained,min,max)); }
public yarnwrap.world.gen.densityfunction.DensityFunction noiseInRange(yarnwrap.registry.entry.RegistryEntry noiseParameters,double scaleXz,double scaleY,double min,double max) { return new yarnwrap.world.gen.densityfunction.DensityFunction(wrapperContained.noiseInRange(noiseParameters.wrapperContained,scaleXz,scaleY,min,max)); }
public yarnwrap.world.gen.densityfunction.DensityFunction noiseInRange(yarnwrap.registry.entry.RegistryEntry noiseParameters,double scaleY,double min,double max) { return new yarnwrap.world.gen.densityfunction.DensityFunction(wrapperContained.noiseInRange(noiseParameters.wrapperContained,scaleY,min,max)); }
public yarnwrap.world.gen.densityfunction.DensityFunction blendAlpha() { return new yarnwrap.world.gen.densityfunction.DensityFunction(wrapperContained.blendAlpha()); }
public yarnwrap.world.gen.densityfunction.DensityFunction flatCache(yarnwrap.world.gen.densityfunction.DensityFunction inputFunction) { return new yarnwrap.world.gen.densityfunction.DensityFunction(wrapperContained.flatCache(inputFunction.wrapperContained)); }
public yarnwrap.world.gen.densityfunction.DensityFunction mul(yarnwrap.world.gen.densityfunction.DensityFunction a,yarnwrap.world.gen.densityfunction.DensityFunction b) { return new yarnwrap.world.gen.densityfunction.DensityFunction(wrapperContained.mul(a.wrapperContained,b.wrapperContained)); }
public yarnwrap.world.gen.densityfunction.DensityFunction shiftA(yarnwrap.registry.entry.RegistryEntry noiseParameters) { return new yarnwrap.world.gen.densityfunction.DensityFunction(wrapperContained.shiftA(noiseParameters.wrapperContained)); }
public yarnwrap.world.gen.densityfunction.DensityFunction noise(yarnwrap.registry.entry.RegistryEntry noiseParameters,double scaleXz,double scaleY) { return new yarnwrap.world.gen.densityfunction.DensityFunction(wrapperContained.noise(noiseParameters.wrapperContained,scaleXz,scaleY)); }
public yarnwrap.world.gen.densityfunction.DensityFunction blendOffset() { return new yarnwrap.world.gen.densityfunction.DensityFunction(wrapperContained.blendOffset()); }
public yarnwrap.world.gen.densityfunction.DensityFunction cache2d(yarnwrap.world.gen.densityfunction.DensityFunction inputFunction) { return new yarnwrap.world.gen.densityfunction.DensityFunction(wrapperContained.cache2d(inputFunction.wrapperContained)); }
public yarnwrap.world.gen.densityfunction.DensityFunction min(yarnwrap.world.gen.densityfunction.DensityFunction a,yarnwrap.world.gen.densityfunction.DensityFunction b) { return new yarnwrap.world.gen.densityfunction.DensityFunction(wrapperContained.min(a.wrapperContained,b.wrapperContained)); }
public yarnwrap.world.gen.densityfunction.DensityFunction shiftB(yarnwrap.registry.entry.RegistryEntry noiseParameters) { return new yarnwrap.world.gen.densityfunction.DensityFunction(wrapperContained.shiftB(noiseParameters.wrapperContained)); }
public yarnwrap.world.gen.densityfunction.DensityFunction cacheOnce(yarnwrap.world.gen.densityfunction.DensityFunction inputFunction) { return new yarnwrap.world.gen.densityfunction.DensityFunction(wrapperContained.cacheOnce(inputFunction.wrapperContained)); }
public yarnwrap.world.gen.densityfunction.DensityFunction max(yarnwrap.world.gen.densityfunction.DensityFunction a,yarnwrap.world.gen.densityfunction.DensityFunction b) { return new yarnwrap.world.gen.densityfunction.DensityFunction(wrapperContained.max(a.wrapperContained,b.wrapperContained)); }
public yarnwrap.world.gen.densityfunction.DensityFunction shift(yarnwrap.registry.entry.RegistryEntry noiseParameters) { return new yarnwrap.world.gen.densityfunction.DensityFunction(wrapperContained.shift(noiseParameters.wrapperContained)); }
public yarnwrap.world.gen.densityfunction.DensityFunction cacheAllInCell(yarnwrap.world.gen.densityfunction.DensityFunction inputFunction) { return new yarnwrap.world.gen.densityfunction.DensityFunction(wrapperContained.cacheAllInCell(inputFunction.wrapperContained)); }
public yarnwrap.world.gen.densityfunction.DensityFunction blendDensity(yarnwrap.world.gen.densityfunction.DensityFunction input) { return new yarnwrap.world.gen.densityfunction.DensityFunction(wrapperContained.blendDensity(input.wrapperContained)); }
// public yarnwrap.world.gen.densityfunction.DensityFunction method_41063(com.mojang.datafixers.util.Either either) { return new yarnwrap.world.gen.densityfunction.DensityFunction(wrapperContained.method_41063(either)); }
// public yarnwrap.util.dynamic.CodecHolder holderOf(com.mojang.serialization.Codec codec,java.util.function.Function creator,java.util.function.Function argumentGetter) { return new yarnwrap.util.dynamic.CodecHolder(wrapperContained.holderOf(codec,creator,argumentGetter)); }
// public yarnwrap.util.dynamic.CodecHolder holderOf(com.mojang.serialization.MapCodec mapCodec) { return new yarnwrap.util.dynamic.CodecHolder(wrapperContained.holderOf(mapCodec)); }
public com.mojang.serialization.MapCodec registerAndGetDefault(yarnwrap.registry.Registry registry) { return wrapperContained.registerAndGetDefault(registry.wrapperContained); }
// public com.mojang.serialization.MapCodec register(yarnwrap.registry.Registry registry,java.lang.String id,yarnwrap.util.dynamic.CodecHolder codecHolder) { return wrapperContained.register(registry.wrapperContained,id,codecHolder.wrapperContained); }
// public yarnwrap.util.dynamic.CodecHolder holderOf(java.util.function.BiFunction creator,java.util.function.Function argument1Getter,java.util.function.Function argument2Getter) { return new yarnwrap.util.dynamic.CodecHolder(wrapperContained.holderOf(creator,argument1Getter,argument2Getter)); }
// public yarnwrap.util.dynamic.CodecHolder holderOf(java.util.function.Function creator,java.util.function.Function argumentGetter) { return new yarnwrap.util.dynamic.CodecHolder(wrapperContained.holderOf(creator,argumentGetter)); }
// public com.mojang.datafixers.kinds.App method_41070(java.util.function.Function instance) { return wrapperContained.method_41070(instance); }
// public com.mojang.datafixers.util.Either method_41071(yarnwrap.world.gen.densityfunction.DensityFunction densityFunction) { return wrapperContained.method_41071(densityFunction.wrapperContained); }
public yarnwrap.world.gen.densityfunction.DensityFunction spline(yarnwrap.util.math.Spline spline) { return new yarnwrap.world.gen.densityfunction.DensityFunction(wrapperContained.spline(spline.wrapperContained)); }
public yarnwrap.world.gen.densityfunction.DensityFunction lerp(yarnwrap.world.gen.densityfunction.DensityFunction delta,double start,yarnwrap.world.gen.densityfunction.DensityFunction end) { return new yarnwrap.world.gen.densityfunction.DensityFunction(wrapperContained.lerp(delta.wrapperContained,start,end.wrapperContained)); }
// public com.mojang.serialization.MapCodec method_42360(yarnwrap.world.gen.densityfunction.DensityFunction densityFunction) { return wrapperContained.method_42360(densityFunction.wrapperContained); }

}
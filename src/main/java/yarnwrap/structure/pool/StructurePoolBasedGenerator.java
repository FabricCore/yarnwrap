package yarnwrap.structure.pool;
public class StructurePoolBasedGenerator { public net.minecraft.structure.pool.StructurePoolBasedGenerator wrapperContained; public StructurePoolBasedGenerator(net.minecraft.structure.pool.StructurePoolBasedGenerator wrapperContained) { this.wrapperContained = wrapperContained; }

// public org.slf4j.Logger LOGGER() { return wrapperContained.LOGGER; }
// public void LOGGER(org.slf4j.Logger value) { wrapperContained.LOGGER = value; }
// public static org.slf4j.Logger LOGGER() { return net.minecraft.structure.pool.StructurePoolBasedGenerator.LOGGER; }
// public static void LOGGER(org.slf4j.Logger value, ) { net.minecraft.structure.pool.StructurePoolBasedGenerator.LOGGER = value; }

// public int HEIGHT_NOT_SET() { return wrapperContained.HEIGHT_NOT_SET; }
// public void HEIGHT_NOT_SET(int value) { wrapperContained.HEIGHT_NOT_SET = value; }
// public static int HEIGHT_NOT_SET() { return net.minecraft.structure.pool.StructurePoolBasedGenerator.HEIGHT_NOT_SET; }
// public static void HEIGHT_NOT_SET(int value, ) { net.minecraft.structure.pool.StructurePoolBasedGenerator.HEIGHT_NOT_SET = value; }

// public void generate(yarnwrap.world.gen.noise.NoiseConfig noiseConfig,int maxSize,boolean modifyBoundingBox,yarnwrap.world.gen.chunk.ChunkGenerator chunkGenerator,yarnwrap.structure.StructureTemplateManager structureTemplateManager,yarnwrap.world.HeightLimitView heightLimitView,yarnwrap.util.math.random.Random random,yarnwrap.registry.Registry structurePoolRegistry,yarnwrap.structure.PoolStructurePiece firstPiece,java.util.List pieces,yarnwrap.util.shape.VoxelShape pieceShape,yarnwrap.structure.pool.alias.StructurePoolAliasLookup aliasLookup,yarnwrap.structure.StructureLiquidSettings liquidSettings) { wrapperContained.generate(noiseConfig.wrapperContained,maxSize,modifyBoundingBox,chunkGenerator.wrapperContained,structureTemplateManager.wrapperContained,heightLimitView.wrapperContained,random.wrapperContained,structurePoolRegistry.wrapperContained,firstPiece.wrapperContained,pieces,pieceShape.wrapperContained,aliasLookup.wrapperContained,liquidSettings.wrapperContained); }
// public static void generate(yarnwrap.world.gen.noise.NoiseConfig noiseConfig,int maxSize,boolean modifyBoundingBox,yarnwrap.world.gen.chunk.ChunkGenerator chunkGenerator,yarnwrap.structure.StructureTemplateManager structureTemplateManager,yarnwrap.world.HeightLimitView heightLimitView,yarnwrap.util.math.random.Random random,yarnwrap.registry.Registry structurePoolRegistry,yarnwrap.structure.PoolStructurePiece firstPiece,java.util.List pieces,yarnwrap.util.shape.VoxelShape pieceShape,yarnwrap.structure.pool.alias.StructurePoolAliasLookup aliasLookup,yarnwrap.structure.StructureLiquidSettings liquidSettings, ) { net.minecraft.structure.pool.StructurePoolBasedGenerator.generate(noiseConfig.wrapperContained,maxSize,modifyBoundingBox,chunkGenerator.wrapperContained,structureTemplateManager.wrapperContained,heightLimitView.wrapperContained,random.wrapperContained,structurePoolRegistry.wrapperContained,firstPiece.wrapperContained,pieces,pieceShape.wrapperContained,aliasLookup.wrapperContained,liquidSettings.wrapperContained); }
// public java.util.Optional generate(Object context,yarnwrap.registry.entry.RegistryEntry structurePool,java.util.Optional id,int size,yarnwrap.util.math.BlockPos pos,boolean useExpansionHack,java.util.Optional projectStartToHeightmap,int maxDistanceFromCenter,yarnwrap.structure.pool.alias.StructurePoolAliasLookup aliasLookup,yarnwrap.world.gen.structure.DimensionPadding dimensionPadding,yarnwrap.structure.StructureLiquidSettings liquidSettings) { return wrapperContained.generate(context,structurePool.wrapperContained,id,size,pos.wrapperContained,useExpansionHack,projectStartToHeightmap,maxDistanceFromCenter,aliasLookup.wrapperContained,dimensionPadding.wrapperContained,liquidSettings.wrapperContained); }
// public static java.util.Optional generate(Object context,yarnwrap.registry.entry.RegistryEntry structurePool,java.util.Optional id,int size,yarnwrap.util.math.BlockPos pos,boolean useExpansionHack,java.util.Optional projectStartToHeightmap,int maxDistanceFromCenter,yarnwrap.structure.pool.alias.StructurePoolAliasLookup aliasLookup,yarnwrap.world.gen.structure.DimensionPadding dimensionPadding,yarnwrap.structure.StructureLiquidSettings liquidSettings, ) { return net.minecraft.structure.pool.StructurePoolBasedGenerator.generate(context,structurePool.wrapperContained,id,size,pos.wrapperContained,useExpansionHack,projectStartToHeightmap,maxDistanceFromCenter,aliasLookup.wrapperContained,dimensionPadding.wrapperContained,liquidSettings.wrapperContained); }
// public void method_39824(yarnwrap.structure.PoolStructurePiece collector) { wrapperContained.method_39824(collector.wrapperContained); }
// public static void method_39824(yarnwrap.structure.PoolStructurePiece collector, ) { net.minecraft.structure.pool.StructurePoolBasedGenerator.method_39824(collector.wrapperContained); }
// public java.util.Optional findStartingJigsawPos(yarnwrap.structure.pool.StructurePoolElement pool,yarnwrap.util.Identifier id,yarnwrap.util.math.BlockPos pos,yarnwrap.util.BlockRotation rotation,yarnwrap.structure.StructureTemplateManager structureManager,yarnwrap.util.math.random.ChunkRandom random) { return wrapperContained.findStartingJigsawPos(pool.wrapperContained,id.wrapperContained,pos.wrapperContained,rotation.wrapperContained,structureManager.wrapperContained,random.wrapperContained); }
// public static java.util.Optional findStartingJigsawPos(yarnwrap.structure.pool.StructurePoolElement pool,yarnwrap.util.Identifier id,yarnwrap.util.math.BlockPos pos,yarnwrap.util.BlockRotation rotation,yarnwrap.structure.StructureTemplateManager structureManager,yarnwrap.util.math.random.ChunkRandom random, ) { return net.minecraft.structure.pool.StructurePoolBasedGenerator.findStartingJigsawPos(pool.wrapperContained,id.wrapperContained,pos.wrapperContained,rotation.wrapperContained,structureManager.wrapperContained,random.wrapperContained); }
// public boolean generate(yarnwrap.server.world.ServerWorld world,yarnwrap.registry.entry.RegistryEntry structurePool,yarnwrap.util.Identifier id,int size,yarnwrap.util.math.BlockPos pos,boolean keepJigsaws) { return wrapperContained.generate(world.wrapperContained,structurePool.wrapperContained,id.wrapperContained,size,pos.wrapperContained,keepJigsaws); }
// public static boolean generate(yarnwrap.server.world.ServerWorld world,yarnwrap.registry.entry.RegistryEntry structurePool,yarnwrap.util.Identifier id,int size,yarnwrap.util.math.BlockPos pos,boolean keepJigsaws, ) { return net.minecraft.structure.pool.StructurePoolBasedGenerator.generate(world.wrapperContained,structurePool.wrapperContained,id.wrapperContained,size,pos.wrapperContained,keepJigsaws); }
// public boolean method_43730(yarnwrap.registry.entry.RegistryEntry biome) { return wrapperContained.method_43730(biome.wrapperContained); }
// public static boolean method_43730(yarnwrap.registry.entry.RegistryEntry biome, ) { return net.minecraft.structure.pool.StructurePoolBasedGenerator.method_43730(biome.wrapperContained); }
// public java.lang.String method_45548(yarnwrap.registry.RegistryKey key) { return wrapperContained.method_45548(key.wrapperContained); }
// public static java.lang.String method_45548(yarnwrap.registry.RegistryKey key, ) { return net.minecraft.structure.pool.StructurePoolBasedGenerator.method_45548(key.wrapperContained); }
// public java.util.Optional method_55604(yarnwrap.registry.Registry key) { return wrapperContained.method_55604(key.wrapperContained); }
// public static java.util.Optional method_55604(yarnwrap.registry.Registry key, ) { return net.minecraft.structure.pool.StructurePoolBasedGenerator.method_55604(key.wrapperContained); }

}
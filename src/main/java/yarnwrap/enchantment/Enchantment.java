package yarnwrap.enchantment;
public class Enchantment { public net.minecraft.enchantment.Enchantment wrapperContained; public Enchantment(net.minecraft.enchantment.Enchantment wrapperContained) { this.wrapperContained = wrapperContained; }

// public com.mojang.serialization.Codec CODEC() { return wrapperContained.CODEC; }
// public void CODEC(com.mojang.serialization.Codec value) { wrapperContained.CODEC = value; }
public static com.mojang.serialization.Codec CODEC() { return net.minecraft.enchantment.Enchantment.CODEC; }
// public static void CODEC(com.mojang.serialization.Codec value, ) { net.minecraft.enchantment.Enchantment.CODEC = value; }

// public com.mojang.serialization.Codec ENTRY_CODEC() { return wrapperContained.ENTRY_CODEC; }
// public void ENTRY_CODEC(com.mojang.serialization.Codec value) { wrapperContained.ENTRY_CODEC = value; }
public static com.mojang.serialization.Codec ENTRY_CODEC() { return net.minecraft.enchantment.Enchantment.ENTRY_CODEC; }
// public static void ENTRY_CODEC(com.mojang.serialization.Codec value, ) { net.minecraft.enchantment.Enchantment.ENTRY_CODEC = value; }

// public int MAX_LEVEL() { return wrapperContained.MAX_LEVEL; }
// public void MAX_LEVEL(int value) { wrapperContained.MAX_LEVEL = value; }
public static int MAX_LEVEL() { return net.minecraft.enchantment.Enchantment.MAX_LEVEL; }
// public static void MAX_LEVEL(int value, ) { net.minecraft.enchantment.Enchantment.MAX_LEVEL = value; }

// public yarnwrap.network.codec.PacketCodec ENTRY_PACKET_CODEC() { return new yarnwrap.network.codec.PacketCodec(wrapperContained.ENTRY_PACKET_CODEC); }
// public void ENTRY_PACKET_CODEC(yarnwrap.network.codec.PacketCodec value) { wrapperContained.ENTRY_PACKET_CODEC = value.wrapperContained; }
public static yarnwrap.network.codec.PacketCodec ENTRY_PACKET_CODEC() { return new yarnwrap.network.codec.PacketCodec(net.minecraft.enchantment.Enchantment.ENTRY_PACKET_CODEC); }
// public static void ENTRY_PACKET_CODEC(yarnwrap.network.codec.PacketCodec value, ) { net.minecraft.enchantment.Enchantment.ENTRY_PACKET_CODEC = value.wrapperContained; }

// public yarnwrap.text.Text getName(yarnwrap.registry.entry.RegistryEntry enchantment,int level) { return new yarnwrap.text.Text(wrapperContained.getName(enchantment.wrapperContained,level)); }
// public static yarnwrap.text.Text getName(yarnwrap.registry.entry.RegistryEntry enchantment,int level, ) { return new yarnwrap.text.Text(net.minecraft.enchantment.Enchantment.getName(enchantment.wrapperContained,level)); }
public int getMinPower(int level) { return wrapperContained.getMinPower(level); }
// public static int getMinPower(int level, ) { return net.minecraft.enchantment.Enchantment.getMinPower(level); }
public int getMaxLevel() { return wrapperContained.getMaxLevel(); }
// public static int getMaxLevel() { return net.minecraft.enchantment.Enchantment.getMaxLevel(); }
public java.util.Map getEquipment(yarnwrap.entity.LivingEntity entity) { return wrapperContained.getEquipment(entity.wrapperContained); }
// public static java.util.Map getEquipment(yarnwrap.entity.LivingEntity entity, ) { return net.minecraft.enchantment.Enchantment.getEquipment(entity.wrapperContained); }
public int getMinLevel() { return wrapperContained.getMinLevel(); }
// public static int getMinLevel() { return net.minecraft.enchantment.Enchantment.getMinLevel(); }
public void onTargetDamaged(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.enchantment.EnchantmentEffectContext context,yarnwrap.enchantment.effect.EnchantmentEffectTarget target,yarnwrap.entity.Entity user,yarnwrap.entity.damage.DamageSource damageSource) { wrapperContained.onTargetDamaged(world.wrapperContained,level,context.wrapperContained,target.wrapperContained,user.wrapperContained,damageSource.wrapperContained); }
// public static void onTargetDamaged(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.enchantment.EnchantmentEffectContext context,yarnwrap.enchantment.effect.EnchantmentEffectTarget target,yarnwrap.entity.Entity user,yarnwrap.entity.damage.DamageSource damageSource, ) { net.minecraft.enchantment.Enchantment.onTargetDamaged(world.wrapperContained,level,context.wrapperContained,target.wrapperContained,user.wrapperContained,damageSource.wrapperContained); }
public boolean isAcceptableItem(yarnwrap.item.ItemStack stack) { return wrapperContained.isAcceptableItem(stack.wrapperContained); }
// public static boolean isAcceptableItem(yarnwrap.item.ItemStack stack, ) { return net.minecraft.enchantment.Enchantment.isAcceptableItem(stack.wrapperContained); }
public int getMaxPower(int level) { return wrapperContained.getMaxPower(level); }
// public static int getMaxPower(int level, ) { return net.minecraft.enchantment.Enchantment.getMaxPower(level); }
public yarnwrap.registry.entry.RegistryEntryList getApplicableItems() { return new yarnwrap.registry.entry.RegistryEntryList(wrapperContained.getApplicableItems()); }
// public static yarnwrap.registry.entry.RegistryEntryList getApplicableItems() { return new yarnwrap.registry.entry.RegistryEntryList(net.minecraft.enchantment.Enchantment.getApplicableItems()); }
// public Object constantCost(int base) { return wrapperContained.constantCost(base); }
// public static Object constantCost(int base, ) { return net.minecraft.enchantment.Enchantment.constantCost(base); }
// public Object leveledCost(int base,int perLevel) { return wrapperContained.leveledCost(base,perLevel); }
// public static Object leveledCost(int base,int perLevel, ) { return net.minecraft.enchantment.Enchantment.leveledCost(base,perLevel); }
// public Object definition(yarnwrap.registry.entry.RegistryEntryList supportedItems,int weight,int maxLevel,Object minCost,Object maxCost,int anvilCost,net.minecraft.component.type.AttributeModifierSlot[] slots) { return wrapperContained.definition(supportedItems.wrapperContained,weight,maxLevel,minCost,maxCost,anvilCost,slots); }
// public static Object definition(yarnwrap.registry.entry.RegistryEntryList supportedItems,int weight,int maxLevel,Object minCost,Object maxCost,int anvilCost,net.minecraft.component.type.AttributeModifierSlot[] slots, ) { return net.minecraft.enchantment.Enchantment.definition(supportedItems.wrapperContained,weight,maxLevel,minCost,maxCost,anvilCost,slots); }
// public Object definition(yarnwrap.registry.entry.RegistryEntryList supportedItems,yarnwrap.registry.entry.RegistryEntryList primaryItems,int weight,int maxLevel,Object minCost,Object maxCost,int anvilCost,net.minecraft.component.type.AttributeModifierSlot[] slots) { return wrapperContained.definition(supportedItems.wrapperContained,primaryItems.wrapperContained,weight,maxLevel,minCost,maxCost,anvilCost,slots); }
// public static Object definition(yarnwrap.registry.entry.RegistryEntryList supportedItems,yarnwrap.registry.entry.RegistryEntryList primaryItems,int weight,int maxLevel,Object minCost,Object maxCost,int anvilCost,net.minecraft.component.type.AttributeModifierSlot[] slots, ) { return net.minecraft.enchantment.Enchantment.definition(supportedItems.wrapperContained,primaryItems.wrapperContained,weight,maxLevel,minCost,maxCost,anvilCost,slots); }
public boolean isPrimaryItem(yarnwrap.item.ItemStack stack) { return wrapperContained.isPrimaryItem(stack.wrapperContained); }
// public static boolean isPrimaryItem(yarnwrap.item.ItemStack stack, ) { return net.minecraft.enchantment.Enchantment.isPrimaryItem(stack.wrapperContained); }
public int getWeight() { return wrapperContained.getWeight(); }
// public static int getWeight() { return net.minecraft.enchantment.Enchantment.getWeight(); }
public int getAnvilCost() { return wrapperContained.getAnvilCost(); }
// public static int getAnvilCost() { return net.minecraft.enchantment.Enchantment.getAnvilCost(); }
public void removeLocationBasedEffects(int level,yarnwrap.enchantment.EnchantmentEffectContext context,yarnwrap.entity.LivingEntity user) { wrapperContained.removeLocationBasedEffects(level,context.wrapperContained,user.wrapperContained); }
// public static void removeLocationBasedEffects(int level,yarnwrap.enchantment.EnchantmentEffectContext context,yarnwrap.entity.LivingEntity user, ) { net.minecraft.enchantment.Enchantment.removeLocationBasedEffects(level,context.wrapperContained,user.wrapperContained); }
public boolean hasDamageImmunityTo(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.entity.Entity user,yarnwrap.entity.damage.DamageSource damageSource) { return wrapperContained.hasDamageImmunityTo(world.wrapperContained,level,user.wrapperContained,damageSource.wrapperContained); }
// public static boolean hasDamageImmunityTo(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.entity.Entity user,yarnwrap.entity.damage.DamageSource damageSource, ) { return net.minecraft.enchantment.Enchantment.hasDamageImmunityTo(world.wrapperContained,level,user.wrapperContained,damageSource.wrapperContained); }
// public yarnwrap.loot.context.LootContext createEnchantedEntityLootContext(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.entity.Entity entity,yarnwrap.util.math.Vec3d pos) { return new yarnwrap.loot.context.LootContext(wrapperContained.createEnchantedEntityLootContext(world.wrapperContained,level,entity.wrapperContained,pos.wrapperContained)); }
// public static yarnwrap.loot.context.LootContext createEnchantedEntityLootContext(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.entity.Entity entity,yarnwrap.util.math.Vec3d pos, ) { return new yarnwrap.loot.context.LootContext(net.minecraft.enchantment.Enchantment.createEnchantedEntityLootContext(world.wrapperContained,level,entity.wrapperContained,pos.wrapperContained)); }
// public yarnwrap.loot.context.LootContext createEnchantedLocationLootContext(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.entity.Entity entity,boolean enchantmentActive) { return new yarnwrap.loot.context.LootContext(wrapperContained.createEnchantedLocationLootContext(world.wrapperContained,level,entity.wrapperContained,enchantmentActive)); }
// public static yarnwrap.loot.context.LootContext createEnchantedLocationLootContext(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.entity.Entity entity,boolean enchantmentActive, ) { return new yarnwrap.loot.context.LootContext(net.minecraft.enchantment.Enchantment.createEnchantedLocationLootContext(world.wrapperContained,level,entity.wrapperContained,enchantmentActive)); }
// public yarnwrap.loot.context.LootContext createEnchantedItemLootContext(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.item.ItemStack stack) { return new yarnwrap.loot.context.LootContext(wrapperContained.createEnchantedItemLootContext(world.wrapperContained,level,stack.wrapperContained)); }
// public static yarnwrap.loot.context.LootContext createEnchantedItemLootContext(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.item.ItemStack stack, ) { return new yarnwrap.loot.context.LootContext(net.minecraft.enchantment.Enchantment.createEnchantedItemLootContext(world.wrapperContained,level,stack.wrapperContained)); }
public void modifyDamageProtection(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.item.ItemStack stack,yarnwrap.entity.Entity user,yarnwrap.entity.damage.DamageSource damageSource,org.apache.commons.lang3.mutable.MutableFloat damageProtection) { wrapperContained.modifyDamageProtection(world.wrapperContained,level,stack.wrapperContained,user.wrapperContained,damageSource.wrapperContained,damageProtection); }
// public static void modifyDamageProtection(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.item.ItemStack stack,yarnwrap.entity.Entity user,yarnwrap.entity.damage.DamageSource damageSource,org.apache.commons.lang3.mutable.MutableFloat damageProtection, ) { net.minecraft.enchantment.Enchantment.modifyDamageProtection(world.wrapperContained,level,stack.wrapperContained,user.wrapperContained,damageSource.wrapperContained,damageProtection); }
public void modifyMobExperience(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.item.ItemStack stack,yarnwrap.entity.Entity user,org.apache.commons.lang3.mutable.MutableFloat mobExperience) { wrapperContained.modifyMobExperience(world.wrapperContained,level,stack.wrapperContained,user.wrapperContained,mobExperience); }
// public static void modifyMobExperience(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.item.ItemStack stack,yarnwrap.entity.Entity user,org.apache.commons.lang3.mutable.MutableFloat mobExperience, ) { net.minecraft.enchantment.Enchantment.modifyMobExperience(world.wrapperContained,level,stack.wrapperContained,user.wrapperContained,mobExperience); }
public void modifyItemDamage(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.item.ItemStack stack,org.apache.commons.lang3.mutable.MutableFloat itemDamage) { wrapperContained.modifyItemDamage(world.wrapperContained,level,stack.wrapperContained,itemDamage); }
// public static void modifyItemDamage(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.item.ItemStack stack,org.apache.commons.lang3.mutable.MutableFloat itemDamage, ) { net.minecraft.enchantment.Enchantment.modifyItemDamage(world.wrapperContained,level,stack.wrapperContained,itemDamage); }
public void onTick(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.enchantment.EnchantmentEffectContext context,yarnwrap.entity.Entity user) { wrapperContained.onTick(world.wrapperContained,level,context.wrapperContained,user.wrapperContained); }
// public static void onTick(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.enchantment.EnchantmentEffectContext context,yarnwrap.entity.Entity user, ) { net.minecraft.enchantment.Enchantment.onTick(world.wrapperContained,level,context.wrapperContained,user.wrapperContained); }
// public void method_60022(yarnwrap.server.world.ServerWorld effect) { wrapperContained.method_60022(effect.wrapperContained); }
// public static void method_60022(yarnwrap.server.world.ServerWorld effect, ) { net.minecraft.enchantment.Enchantment.method_60022(effect.wrapperContained); }
public void onHitBlock(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.enchantment.EnchantmentEffectContext context,yarnwrap.entity.Entity enchantedEntity,yarnwrap.util.math.Vec3d pos,yarnwrap.block.BlockState state) { wrapperContained.onHitBlock(world.wrapperContained,level,context.wrapperContained,enchantedEntity.wrapperContained,pos.wrapperContained,state.wrapperContained); }
// public static void onHitBlock(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.enchantment.EnchantmentEffectContext context,yarnwrap.entity.Entity enchantedEntity,yarnwrap.util.math.Vec3d pos,yarnwrap.block.BlockState state, ) { net.minecraft.enchantment.Enchantment.onHitBlock(world.wrapperContained,level,context.wrapperContained,enchantedEntity.wrapperContained,pos.wrapperContained,state.wrapperContained); }
// public void method_60024(yarnwrap.server.world.ServerWorld effect) { wrapperContained.method_60024(effect.wrapperContained); }
// public static void method_60024(yarnwrap.server.world.ServerWorld effect, ) { net.minecraft.enchantment.Enchantment.method_60024(effect.wrapperContained); }
public void applyLocationBasedEffects(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.enchantment.EnchantmentEffectContext context,yarnwrap.entity.LivingEntity user) { wrapperContained.applyLocationBasedEffects(world.wrapperContained,level,context.wrapperContained,user.wrapperContained); }
// public static void applyLocationBasedEffects(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.enchantment.EnchantmentEffectContext context,yarnwrap.entity.LivingEntity user, ) { net.minecraft.enchantment.Enchantment.applyLocationBasedEffects(world.wrapperContained,level,context.wrapperContained,user.wrapperContained); }
public boolean slotMatches(yarnwrap.entity.EquipmentSlot slot) { return wrapperContained.slotMatches(slot.wrapperContained); }
// public static boolean slotMatches(yarnwrap.entity.EquipmentSlot slot, ) { return net.minecraft.enchantment.Enchantment.slotMatches(slot.wrapperContained); }
// public boolean method_60027(yarnwrap.entity.EquipmentSlot slotx) { return wrapperContained.method_60027(slotx.wrapperContained); }
// public static boolean method_60027(yarnwrap.entity.EquipmentSlot slotx, ) { return net.minecraft.enchantment.Enchantment.method_60027(slotx.wrapperContained); }
// public com.mojang.datafixers.kinds.App method_60028(Object instance) { return wrapperContained.method_60028(instance); }
// public static com.mojang.datafixers.kinds.App method_60028(Object instance, ) { return net.minecraft.enchantment.Enchantment.method_60028(instance); }
// public void method_60029(yarnwrap.enchantment.EnchantmentEffectContext effect) { wrapperContained.method_60029(effect.wrapperContained); }
// public static void method_60029(yarnwrap.enchantment.EnchantmentEffectContext effect, ) { net.minecraft.enchantment.Enchantment.method_60029(effect.wrapperContained); }
// public Object builder(Object definition) { return wrapperContained.builder(definition); }
// public static Object builder(Object definition, ) { return net.minecraft.enchantment.Enchantment.builder(definition); }
// public void applyTargetedEffect(yarnwrap.enchantment.effect.TargetedEnchantmentEffect effect,yarnwrap.server.world.ServerWorld world,int level,yarnwrap.enchantment.EnchantmentEffectContext context,yarnwrap.entity.Entity user,yarnwrap.entity.damage.DamageSource damageSource) { wrapperContained.applyTargetedEffect(effect.wrapperContained,world.wrapperContained,level,context.wrapperContained,user.wrapperContained,damageSource.wrapperContained); }
// public static void applyTargetedEffect(yarnwrap.enchantment.effect.TargetedEnchantmentEffect effect,yarnwrap.server.world.ServerWorld world,int level,yarnwrap.enchantment.EnchantmentEffectContext context,yarnwrap.entity.Entity user,yarnwrap.entity.damage.DamageSource damageSource, ) { net.minecraft.enchantment.Enchantment.applyTargetedEffect(effect.wrapperContained,world.wrapperContained,level,context.wrapperContained,user.wrapperContained,damageSource.wrapperContained); }
// public void applyEffects(java.util.List entries,yarnwrap.loot.context.LootContext lootContext,java.util.function.Consumer effectConsumer) { wrapperContained.applyEffects(entries,lootContext.wrapperContained,effectConsumer); }
// public static void applyEffects(java.util.List entries,yarnwrap.loot.context.LootContext lootContext,java.util.function.Consumer effectConsumer, ) { net.minecraft.enchantment.Enchantment.applyEffects(entries,lootContext.wrapperContained,effectConsumer); }
// public boolean canBeCombined(yarnwrap.registry.entry.RegistryEntry first,yarnwrap.registry.entry.RegistryEntry second) { return wrapperContained.canBeCombined(first.wrapperContained,second.wrapperContained); }
// public static boolean canBeCombined(yarnwrap.registry.entry.RegistryEntry first,yarnwrap.registry.entry.RegistryEntry second, ) { return net.minecraft.enchantment.Enchantment.canBeCombined(first.wrapperContained,second.wrapperContained); }
public java.util.List getEffect(yarnwrap.component.ComponentType type) { return wrapperContained.getEffect(type.wrapperContained); }
// public static java.util.List getEffect(yarnwrap.component.ComponentType type, ) { return net.minecraft.enchantment.Enchantment.getEffect(type.wrapperContained); }
// public void modifyValue(yarnwrap.component.ComponentType type,yarnwrap.server.world.ServerWorld world,int level,yarnwrap.item.ItemStack stack,yarnwrap.entity.Entity user,yarnwrap.entity.damage.DamageSource damageSource,org.apache.commons.lang3.mutable.MutableFloat value) { wrapperContained.modifyValue(type.wrapperContained,world.wrapperContained,level,stack.wrapperContained,user.wrapperContained,damageSource.wrapperContained,value); }
// public static void modifyValue(yarnwrap.component.ComponentType type,yarnwrap.server.world.ServerWorld world,int level,yarnwrap.item.ItemStack stack,yarnwrap.entity.Entity user,yarnwrap.entity.damage.DamageSource damageSource,org.apache.commons.lang3.mutable.MutableFloat value, ) { net.minecraft.enchantment.Enchantment.modifyValue(type.wrapperContained,world.wrapperContained,level,stack.wrapperContained,user.wrapperContained,damageSource.wrapperContained,value); }
// public void modifyValue(yarnwrap.component.ComponentType type,yarnwrap.server.world.ServerWorld world,int level,yarnwrap.item.ItemStack stack,yarnwrap.entity.Entity user,org.apache.commons.lang3.mutable.MutableFloat value) { wrapperContained.modifyValue(type.wrapperContained,world.wrapperContained,level,stack.wrapperContained,user.wrapperContained,value); }
// public static void modifyValue(yarnwrap.component.ComponentType type,yarnwrap.server.world.ServerWorld world,int level,yarnwrap.item.ItemStack stack,yarnwrap.entity.Entity user,org.apache.commons.lang3.mutable.MutableFloat value, ) { net.minecraft.enchantment.Enchantment.modifyValue(type.wrapperContained,world.wrapperContained,level,stack.wrapperContained,user.wrapperContained,value); }
// public void modifyValue(yarnwrap.component.ComponentType type,yarnwrap.server.world.ServerWorld world,int level,yarnwrap.item.ItemStack stack,org.apache.commons.lang3.mutable.MutableFloat value) { wrapperContained.modifyValue(type.wrapperContained,world.wrapperContained,level,stack.wrapperContained,value); }
// public static void modifyValue(yarnwrap.component.ComponentType type,yarnwrap.server.world.ServerWorld world,int level,yarnwrap.item.ItemStack stack,org.apache.commons.lang3.mutable.MutableFloat value, ) { net.minecraft.enchantment.Enchantment.modifyValue(type.wrapperContained,world.wrapperContained,level,stack.wrapperContained,value); }
// public void method_60038(org.apache.commons.lang3.mutable.MutableFloat effect) { wrapperContained.method_60038(effect); }
// public static void method_60038(org.apache.commons.lang3.mutable.MutableFloat effect, ) { net.minecraft.enchantment.Enchantment.method_60038(effect); }
// public void method_60039(org.apache.commons.lang3.mutable.MutableFloat effect) { wrapperContained.method_60039(effect); }
// public static void method_60039(org.apache.commons.lang3.mutable.MutableFloat effect, ) { net.minecraft.enchantment.Enchantment.method_60039(effect); }
// public yarnwrap.loot.context.LootContext createEnchantedDamageLootContext(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.entity.Entity entity,yarnwrap.entity.damage.DamageSource damageSource) { return new yarnwrap.loot.context.LootContext(wrapperContained.createEnchantedDamageLootContext(world.wrapperContained,level,entity.wrapperContained,damageSource.wrapperContained)); }
// public static yarnwrap.loot.context.LootContext createEnchantedDamageLootContext(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.entity.Entity entity,yarnwrap.entity.damage.DamageSource damageSource, ) { return new yarnwrap.loot.context.LootContext(net.minecraft.enchantment.Enchantment.createEnchantedDamageLootContext(world.wrapperContained,level,entity.wrapperContained,damageSource.wrapperContained)); }
public void modifyDamage(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.item.ItemStack stack,yarnwrap.entity.Entity user,yarnwrap.entity.damage.DamageSource damageSource,org.apache.commons.lang3.mutable.MutableFloat damage) { wrapperContained.modifyDamage(world.wrapperContained,level,stack.wrapperContained,user.wrapperContained,damageSource.wrapperContained,damage); }
// public static void modifyDamage(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.item.ItemStack stack,yarnwrap.entity.Entity user,yarnwrap.entity.damage.DamageSource damageSource,org.apache.commons.lang3.mutable.MutableFloat damage, ) { net.minecraft.enchantment.Enchantment.modifyDamage(world.wrapperContained,level,stack.wrapperContained,user.wrapperContained,damageSource.wrapperContained,damage); }
public void modifyTridentReturnAcceleration(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.item.ItemStack stack,yarnwrap.entity.Entity user,org.apache.commons.lang3.mutable.MutableFloat tridentReturnAcceleration) { wrapperContained.modifyTridentReturnAcceleration(world.wrapperContained,level,stack.wrapperContained,user.wrapperContained,tridentReturnAcceleration); }
// public static void modifyTridentReturnAcceleration(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.item.ItemStack stack,yarnwrap.entity.Entity user,org.apache.commons.lang3.mutable.MutableFloat tridentReturnAcceleration, ) { net.minecraft.enchantment.Enchantment.modifyTridentReturnAcceleration(world.wrapperContained,level,stack.wrapperContained,user.wrapperContained,tridentReturnAcceleration); }
public void modifyAmmoUse(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.item.ItemStack projectileStack,org.apache.commons.lang3.mutable.MutableFloat ammoUse) { wrapperContained.modifyAmmoUse(world.wrapperContained,level,projectileStack.wrapperContained,ammoUse); }
// public static void modifyAmmoUse(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.item.ItemStack projectileStack,org.apache.commons.lang3.mutable.MutableFloat ammoUse, ) { net.minecraft.enchantment.Enchantment.modifyAmmoUse(world.wrapperContained,level,projectileStack.wrapperContained,ammoUse); }
public void onProjectileSpawned(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.enchantment.EnchantmentEffectContext context,yarnwrap.entity.Entity user) { wrapperContained.onProjectileSpawned(world.wrapperContained,level,context.wrapperContained,user.wrapperContained); }
// public static void onProjectileSpawned(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.enchantment.EnchantmentEffectContext context,yarnwrap.entity.Entity user, ) { net.minecraft.enchantment.Enchantment.onProjectileSpawned(world.wrapperContained,level,context.wrapperContained,user.wrapperContained); }
// public void method_60045(yarnwrap.server.world.ServerWorld effect) { wrapperContained.method_60045(effect.wrapperContained); }
// public static void method_60045(yarnwrap.server.world.ServerWorld effect, ) { net.minecraft.enchantment.Enchantment.method_60045(effect.wrapperContained); }
public boolean isSupportedItem(yarnwrap.item.ItemStack stack) { return wrapperContained.isSupportedItem(stack.wrapperContained); }
// public static boolean isSupportedItem(yarnwrap.item.ItemStack stack, ) { return net.minecraft.enchantment.Enchantment.isSupportedItem(stack.wrapperContained); }
// public void method_60047(org.apache.commons.lang3.mutable.MutableFloat effect) { wrapperContained.method_60047(effect); }
// public static void method_60047(org.apache.commons.lang3.mutable.MutableFloat effect, ) { net.minecraft.enchantment.Enchantment.method_60047(effect); }
public void modifySmashDamagePerFallenBlock(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.item.ItemStack stack,yarnwrap.entity.Entity user,yarnwrap.entity.damage.DamageSource damageSource,org.apache.commons.lang3.mutable.MutableFloat smashDamagePerFallenBlock) { wrapperContained.modifySmashDamagePerFallenBlock(world.wrapperContained,level,stack.wrapperContained,user.wrapperContained,damageSource.wrapperContained,smashDamagePerFallenBlock); }
// public static void modifySmashDamagePerFallenBlock(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.item.ItemStack stack,yarnwrap.entity.Entity user,yarnwrap.entity.damage.DamageSource damageSource,org.apache.commons.lang3.mutable.MutableFloat smashDamagePerFallenBlock, ) { net.minecraft.enchantment.Enchantment.modifySmashDamagePerFallenBlock(world.wrapperContained,level,stack.wrapperContained,user.wrapperContained,damageSource.wrapperContained,smashDamagePerFallenBlock); }
public void modifyTridentSpinAttackStrength(yarnwrap.util.math.random.Random random,int level,org.apache.commons.lang3.mutable.MutableFloat tridentSpinAttackStrength) { wrapperContained.modifyTridentSpinAttackStrength(random.wrapperContained,level,tridentSpinAttackStrength); }
// public static void modifyTridentSpinAttackStrength(yarnwrap.util.math.random.Random random,int level,org.apache.commons.lang3.mutable.MutableFloat tridentSpinAttackStrength, ) { net.minecraft.enchantment.Enchantment.modifyTridentSpinAttackStrength(random.wrapperContained,level,tridentSpinAttackStrength); }
public void modifyProjectilePiercing(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.item.ItemStack stack,org.apache.commons.lang3.mutable.MutableFloat projectilePiercing) { wrapperContained.modifyProjectilePiercing(world.wrapperContained,level,stack.wrapperContained,projectilePiercing); }
// public static void modifyProjectilePiercing(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.item.ItemStack stack,org.apache.commons.lang3.mutable.MutableFloat projectilePiercing, ) { net.minecraft.enchantment.Enchantment.modifyProjectilePiercing(world.wrapperContained,level,stack.wrapperContained,projectilePiercing); }
public void modifyKnockback(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.item.ItemStack stack,yarnwrap.entity.Entity user,yarnwrap.entity.damage.DamageSource damageSource,org.apache.commons.lang3.mutable.MutableFloat knockback) { wrapperContained.modifyKnockback(world.wrapperContained,level,stack.wrapperContained,user.wrapperContained,damageSource.wrapperContained,knockback); }
// public static void modifyKnockback(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.item.ItemStack stack,yarnwrap.entity.Entity user,yarnwrap.entity.damage.DamageSource damageSource,org.apache.commons.lang3.mutable.MutableFloat knockback, ) { net.minecraft.enchantment.Enchantment.modifyKnockback(world.wrapperContained,level,stack.wrapperContained,user.wrapperContained,damageSource.wrapperContained,knockback); }
public void modifyFishingTimeReduction(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.item.ItemStack stack,yarnwrap.entity.Entity user,org.apache.commons.lang3.mutable.MutableFloat fishingTimeReduction) { wrapperContained.modifyFishingTimeReduction(world.wrapperContained,level,stack.wrapperContained,user.wrapperContained,fishingTimeReduction); }
// public static void modifyFishingTimeReduction(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.item.ItemStack stack,yarnwrap.entity.Entity user,org.apache.commons.lang3.mutable.MutableFloat fishingTimeReduction, ) { net.minecraft.enchantment.Enchantment.modifyFishingTimeReduction(world.wrapperContained,level,stack.wrapperContained,user.wrapperContained,fishingTimeReduction); }
public void modifyBlockExperience(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.item.ItemStack stack,org.apache.commons.lang3.mutable.MutableFloat blockExperience) { wrapperContained.modifyBlockExperience(world.wrapperContained,level,stack.wrapperContained,blockExperience); }
// public static void modifyBlockExperience(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.item.ItemStack stack,org.apache.commons.lang3.mutable.MutableFloat blockExperience, ) { net.minecraft.enchantment.Enchantment.modifyBlockExperience(world.wrapperContained,level,stack.wrapperContained,blockExperience); }
public void modifyArmorEffectiveness(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.item.ItemStack stack,yarnwrap.entity.Entity user,yarnwrap.entity.damage.DamageSource damageSource,org.apache.commons.lang3.mutable.MutableFloat armorEffectiveness) { wrapperContained.modifyArmorEffectiveness(world.wrapperContained,level,stack.wrapperContained,user.wrapperContained,damageSource.wrapperContained,armorEffectiveness); }
// public static void modifyArmorEffectiveness(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.item.ItemStack stack,yarnwrap.entity.Entity user,yarnwrap.entity.damage.DamageSource damageSource,org.apache.commons.lang3.mutable.MutableFloat armorEffectiveness, ) { net.minecraft.enchantment.Enchantment.modifyArmorEffectiveness(world.wrapperContained,level,stack.wrapperContained,user.wrapperContained,damageSource.wrapperContained,armorEffectiveness); }
public void modifyFishingLuckBonus(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.item.ItemStack stack,yarnwrap.entity.Entity user,org.apache.commons.lang3.mutable.MutableFloat fishingLuckBonus) { wrapperContained.modifyFishingLuckBonus(world.wrapperContained,level,stack.wrapperContained,user.wrapperContained,fishingLuckBonus); }
// public static void modifyFishingLuckBonus(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.item.ItemStack stack,yarnwrap.entity.Entity user,org.apache.commons.lang3.mutable.MutableFloat fishingLuckBonus, ) { net.minecraft.enchantment.Enchantment.modifyFishingLuckBonus(world.wrapperContained,level,stack.wrapperContained,user.wrapperContained,fishingLuckBonus); }
public void modifyRepairWithExperience(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.item.ItemStack stack,org.apache.commons.lang3.mutable.MutableFloat repairWithExperience) { wrapperContained.modifyRepairWithExperience(world.wrapperContained,level,stack.wrapperContained,repairWithExperience); }
// public static void modifyRepairWithExperience(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.item.ItemStack stack,org.apache.commons.lang3.mutable.MutableFloat repairWithExperience, ) { net.minecraft.enchantment.Enchantment.modifyRepairWithExperience(world.wrapperContained,level,stack.wrapperContained,repairWithExperience); }
public void modifyProjectileCount(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.item.ItemStack stack,yarnwrap.entity.Entity user,org.apache.commons.lang3.mutable.MutableFloat projectileCount) { wrapperContained.modifyProjectileCount(world.wrapperContained,level,stack.wrapperContained,user.wrapperContained,projectileCount); }
// public static void modifyProjectileCount(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.item.ItemStack stack,yarnwrap.entity.Entity user,org.apache.commons.lang3.mutable.MutableFloat projectileCount, ) { net.minecraft.enchantment.Enchantment.modifyProjectileCount(world.wrapperContained,level,stack.wrapperContained,user.wrapperContained,projectileCount); }
public void modifyCrossbowChargeTime(yarnwrap.util.math.random.Random random,int level,org.apache.commons.lang3.mutable.MutableFloat crossbowChargeTime) { wrapperContained.modifyCrossbowChargeTime(random.wrapperContained,level,crossbowChargeTime); }
// public static void modifyCrossbowChargeTime(yarnwrap.util.math.random.Random random,int level,org.apache.commons.lang3.mutable.MutableFloat crossbowChargeTime, ) { net.minecraft.enchantment.Enchantment.modifyCrossbowChargeTime(random.wrapperContained,level,crossbowChargeTime); }
public void modifyProjectileSpread(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.item.ItemStack stack,yarnwrap.entity.Entity user,org.apache.commons.lang3.mutable.MutableFloat projectileSpread) { wrapperContained.modifyProjectileSpread(world.wrapperContained,level,stack.wrapperContained,user.wrapperContained,projectileSpread); }
// public static void modifyProjectileSpread(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.item.ItemStack stack,yarnwrap.entity.Entity user,org.apache.commons.lang3.mutable.MutableFloat projectileSpread, ) { net.minecraft.enchantment.Enchantment.modifyProjectileSpread(world.wrapperContained,level,stack.wrapperContained,user.wrapperContained,projectileSpread); }
public void modifyValue(yarnwrap.component.ComponentType type,yarnwrap.util.math.random.Random random,int level,org.apache.commons.lang3.mutable.MutableFloat value) { wrapperContained.modifyValue(type.wrapperContained,random.wrapperContained,level,value); }
// public static void modifyValue(yarnwrap.component.ComponentType type,yarnwrap.util.math.random.Random random,int level,org.apache.commons.lang3.mutable.MutableFloat value, ) { net.minecraft.enchantment.Enchantment.modifyValue(type.wrapperContained,random.wrapperContained,level,value); }
// public yarnwrap.loot.context.LootContext createHitBlockLootContext(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.entity.Entity entity,yarnwrap.util.math.Vec3d pos,yarnwrap.block.BlockState state) { return new yarnwrap.loot.context.LootContext(wrapperContained.createHitBlockLootContext(world.wrapperContained,level,entity.wrapperContained,pos.wrapperContained,state.wrapperContained)); }
// public static yarnwrap.loot.context.LootContext createHitBlockLootContext(yarnwrap.server.world.ServerWorld world,int level,yarnwrap.entity.Entity entity,yarnwrap.util.math.Vec3d pos,yarnwrap.block.BlockState state, ) { return new yarnwrap.loot.context.LootContext(net.minecraft.enchantment.Enchantment.createHitBlockLootContext(world.wrapperContained,level,entity.wrapperContained,pos.wrapperContained,state.wrapperContained)); }

}
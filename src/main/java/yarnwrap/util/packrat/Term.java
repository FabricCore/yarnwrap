package yarnwrap.util.packrat;
public class Term { public net.minecraft.util.packrat.Term wrapperContained; public Term(net.minecraft.util.packrat.Term wrapperContained) { this.wrapperContained = wrapperContained; }

// public yarnwrap.util.packrat.Term cutting() { return new yarnwrap.util.packrat.Term(wrapperContained.cutting()); }
public static yarnwrap.util.packrat.Term cutting() { return new yarnwrap.util.packrat.Term(net.minecraft.util.packrat.Term.cutting()); }
// public yarnwrap.util.packrat.Term always(yarnwrap.util.packrat.Symbol symbol,java.lang.Object value) { return new yarnwrap.util.packrat.Term(wrapperContained.always(symbol.wrapperContained,value)); }
// public static yarnwrap.util.packrat.Term always(yarnwrap.util.packrat.Symbol symbol,java.lang.Object value, ) { return new yarnwrap.util.packrat.Term(net.minecraft.util.packrat.Term.always(symbol.wrapperContained,value)); }
public boolean matches(yarnwrap.util.packrat.ParsingState state,yarnwrap.util.packrat.ParseResults results,yarnwrap.util.packrat.Cut cut) { return wrapperContained.matches(state.wrapperContained,results.wrapperContained,cut.wrapperContained); }
// public static boolean matches(yarnwrap.util.packrat.ParsingState state,yarnwrap.util.packrat.ParseResults results,yarnwrap.util.packrat.Cut cut, ) { return net.minecraft.util.packrat.Term.matches(state.wrapperContained,results.wrapperContained,cut.wrapperContained); }
// public yarnwrap.util.packrat.Term optional(yarnwrap.util.packrat.Term term) { return new yarnwrap.util.packrat.Term(wrapperContained.optional(term.wrapperContained)); }
// public static yarnwrap.util.packrat.Term optional(yarnwrap.util.packrat.Term term, ) { return new yarnwrap.util.packrat.Term(net.minecraft.util.packrat.Term.optional(term.wrapperContained)); }
// public yarnwrap.util.packrat.Term sequence(net.minecraft.util.packrat.Term[] terms) { return new yarnwrap.util.packrat.Term(wrapperContained.sequence(terms)); }
// public static yarnwrap.util.packrat.Term sequence(net.minecraft.util.packrat.Term[] terms, ) { return new yarnwrap.util.packrat.Term(net.minecraft.util.packrat.Term.sequence(terms)); }
// public yarnwrap.util.packrat.Term epsilon() { return new yarnwrap.util.packrat.Term(wrapperContained.epsilon()); }
public static yarnwrap.util.packrat.Term epsilon() { return new yarnwrap.util.packrat.Term(net.minecraft.util.packrat.Term.epsilon()); }
// public yarnwrap.util.packrat.Term anyOf(net.minecraft.util.packrat.Term[] terms) { return new yarnwrap.util.packrat.Term(wrapperContained.anyOf(terms)); }
// public static yarnwrap.util.packrat.Term anyOf(net.minecraft.util.packrat.Term[] terms, ) { return new yarnwrap.util.packrat.Term(net.minecraft.util.packrat.Term.anyOf(terms)); }
// public yarnwrap.util.packrat.Term repeated(yarnwrap.util.packrat.ParsingRuleEntry element,yarnwrap.util.packrat.Symbol listName) { return new yarnwrap.util.packrat.Term(wrapperContained.repeated(element.wrapperContained,listName.wrapperContained)); }
// public static yarnwrap.util.packrat.Term repeated(yarnwrap.util.packrat.ParsingRuleEntry element,yarnwrap.util.packrat.Symbol listName, ) { return new yarnwrap.util.packrat.Term(net.minecraft.util.packrat.Term.repeated(element.wrapperContained,listName.wrapperContained)); }
// public yarnwrap.util.packrat.Term repeated(yarnwrap.util.packrat.ParsingRuleEntry element,yarnwrap.util.packrat.Symbol listName,int minRepetitions) { return new yarnwrap.util.packrat.Term(wrapperContained.repeated(element.wrapperContained,listName.wrapperContained,minRepetitions)); }
// public static yarnwrap.util.packrat.Term repeated(yarnwrap.util.packrat.ParsingRuleEntry element,yarnwrap.util.packrat.Symbol listName,int minRepetitions, ) { return new yarnwrap.util.packrat.Term(net.minecraft.util.packrat.Term.repeated(element.wrapperContained,listName.wrapperContained,minRepetitions)); }
// public yarnwrap.util.packrat.Term repeatWithPossiblyTrailingSeparator(yarnwrap.util.packrat.ParsingRuleEntry element,yarnwrap.util.packrat.Symbol listName,yarnwrap.util.packrat.Term separator) { return new yarnwrap.util.packrat.Term(wrapperContained.repeatWithPossiblyTrailingSeparator(element.wrapperContained,listName.wrapperContained,separator.wrapperContained)); }
// public static yarnwrap.util.packrat.Term repeatWithPossiblyTrailingSeparator(yarnwrap.util.packrat.ParsingRuleEntry element,yarnwrap.util.packrat.Symbol listName,yarnwrap.util.packrat.Term separator, ) { return new yarnwrap.util.packrat.Term(net.minecraft.util.packrat.Term.repeatWithPossiblyTrailingSeparator(element.wrapperContained,listName.wrapperContained,separator.wrapperContained)); }
// public yarnwrap.util.packrat.Term repeatWithPossiblyTrailingSeparator(yarnwrap.util.packrat.ParsingRuleEntry element,yarnwrap.util.packrat.Symbol listName,yarnwrap.util.packrat.Term separator,int minRepetitions) { return new yarnwrap.util.packrat.Term(wrapperContained.repeatWithPossiblyTrailingSeparator(element.wrapperContained,listName.wrapperContained,separator.wrapperContained,minRepetitions)); }
// public static yarnwrap.util.packrat.Term repeatWithPossiblyTrailingSeparator(yarnwrap.util.packrat.ParsingRuleEntry element,yarnwrap.util.packrat.Symbol listName,yarnwrap.util.packrat.Term separator,int minRepetitions, ) { return new yarnwrap.util.packrat.Term(net.minecraft.util.packrat.Term.repeatWithPossiblyTrailingSeparator(element.wrapperContained,listName.wrapperContained,separator.wrapperContained,minRepetitions)); }
// public yarnwrap.util.packrat.Term fail(java.lang.Object reason) { return new yarnwrap.util.packrat.Term(wrapperContained.fail(reason)); }
// public static yarnwrap.util.packrat.Term fail(java.lang.Object reason, ) { return new yarnwrap.util.packrat.Term(net.minecraft.util.packrat.Term.fail(reason)); }
// public yarnwrap.util.packrat.Term repeatWithSeparator(yarnwrap.util.packrat.ParsingRuleEntry element,yarnwrap.util.packrat.Symbol listName,yarnwrap.util.packrat.Term separator) { return new yarnwrap.util.packrat.Term(wrapperContained.repeatWithSeparator(element.wrapperContained,listName.wrapperContained,separator.wrapperContained)); }
// public static yarnwrap.util.packrat.Term repeatWithSeparator(yarnwrap.util.packrat.ParsingRuleEntry element,yarnwrap.util.packrat.Symbol listName,yarnwrap.util.packrat.Term separator, ) { return new yarnwrap.util.packrat.Term(net.minecraft.util.packrat.Term.repeatWithSeparator(element.wrapperContained,listName.wrapperContained,separator.wrapperContained)); }
// public yarnwrap.util.packrat.Term repeatWithSeparator(yarnwrap.util.packrat.ParsingRuleEntry element,yarnwrap.util.packrat.Symbol listName,yarnwrap.util.packrat.Term separator,int minRepetitions) { return new yarnwrap.util.packrat.Term(wrapperContained.repeatWithSeparator(element.wrapperContained,listName.wrapperContained,separator.wrapperContained,minRepetitions)); }
// public static yarnwrap.util.packrat.Term repeatWithSeparator(yarnwrap.util.packrat.ParsingRuleEntry element,yarnwrap.util.packrat.Symbol listName,yarnwrap.util.packrat.Term separator,int minRepetitions, ) { return new yarnwrap.util.packrat.Term(net.minecraft.util.packrat.Term.repeatWithSeparator(element.wrapperContained,listName.wrapperContained,separator.wrapperContained,minRepetitions)); }
// public yarnwrap.util.packrat.Term positiveLookahead(yarnwrap.util.packrat.Term term) { return new yarnwrap.util.packrat.Term(wrapperContained.positiveLookahead(term.wrapperContained)); }
// public static yarnwrap.util.packrat.Term positiveLookahead(yarnwrap.util.packrat.Term term, ) { return new yarnwrap.util.packrat.Term(net.minecraft.util.packrat.Term.positiveLookahead(term.wrapperContained)); }
// public yarnwrap.util.packrat.Term negativeLookahead(yarnwrap.util.packrat.Term term) { return new yarnwrap.util.packrat.Term(wrapperContained.negativeLookahead(term.wrapperContained)); }
// public static yarnwrap.util.packrat.Term negativeLookahead(yarnwrap.util.packrat.Term term, ) { return new yarnwrap.util.packrat.Term(net.minecraft.util.packrat.Term.negativeLookahead(term.wrapperContained)); }

}